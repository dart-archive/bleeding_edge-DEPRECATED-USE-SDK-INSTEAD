import gclient_utils
import os

path = gclient_utils.FindGclientRoot(os.getcwd())
execfile(os.path.join(path, 'dartium.deps', 'DEPS.chromium')) # Include proper Chromium DEPS.

# Now we need to override some settings and add some new ones.

vars.update({
  "chromium_url": "http://src.chromium.org/svn",
  "dartium_chromium_url": "http://src.chromium.org/multivm/branches/1650/chrome",
  "dartium_chromium_revision": "1579",
  # The Dart repository URL is pulled out here so that it can be easily
  # updated to "https" for committers.
  "dart_branch": "/branches/bleeding_edge",
  "dartium_webkit_trunk": "http://src.chromium.org/multivm/branches/1650/blink",
  "dartium_webkit_revision": "1578",
  "bootstrap_css_rev" : "@28387",

  "co19_rev": "@651",
})

def massage_deps(deps):
  for key, value in deps.items():
    if value is None: continue

    if value.startswith('/trunk'):
      deps[key] = Var("chromium_url") + value
      continue

    if value.startswith(Var("webkit_trunk")):
      path, revision = value.split('@') # and svn revision.
      path = path[len(Var("webkit_trunk")):]  # Strip WebKit repo.
      value = (Var("dartium_webkit_trunk") + path +
               '@' + Var("dartium_webkit_revision"))
      deps[key] = value
      continue

massage_deps(deps)
for os_deps in deps_os.values():
  massage_deps(os_deps)

deps.update({
  "src":
    Var("dartium_chromium_url") + "@" + Var("dartium_chromium_revision"),

  "src/dart":
    Var("dart_branch") + "/dart",

  "src/dart/tests/co19/src": ((Var("googlecode_url") % "co19") +
      "/trunk/co19/tests/co19/src" + Var("co19_rev")),

  "src/dart/runtime/bin/vmservice/client/bootstrap_css":
    "/third_party/bootstrap_css" + Var("bootstrap_css_rev"),

  "src/dart/runtime/bin/vmservice/client/web/bootstrap_css":
    "/third_party/bootstrap_css" + Var("bootstrap_css_rev"),

  "src/dart/runtime/bin/vmservice/client/out/web/bootstrap_css":
    "/third_party/bootstrap_css" + Var("bootstrap_css_rev"),
})

hooks[0:0] = [{
    "pattern": "dart",
    "action": ["python", "src/dartium_tools/generate_dart_vm_version.py"],
  }]
