# Copyright (c) 2012, the Dart project authors.  Please see the AUTHORS file
# for details. All rights reserved. Use of this source code is governed by a
# BSD-style license that can be found in the LICENSE file.

vars = {
  # Use this googlecode_url variable only if there is an internal mirror for it.
  # If you do not know, use the full path while defining your new deps entry.
  "googlecode_url": "http://%s.googlecode.com/svn",

  "gyp_rev": "@1752",
  "nss_rev": "@257452",
  "co19_rev": "@672",
  "chromium_url": "http://src.chromium.org/svn",
  "chromium_git": "http://git.chromium.org/git",

  # Revisions of /third_party/* dependencies.
  "7zip_rev" : "@19997",
  "apache_ant_rev" : "@19997",
  "apache_compress_rev" : "@19997",
  "args4j_rev" : "@19997",
  "bzip2_rev" : "@19997",
  "chrome_rev" : "@19997",
  "clang_rev" : "@28450",
  "commons-io_rev" : "@19997",
  "commons-lang_rev" : "@33092",
  "d8_rev" : "@33015",
  "eclipse_rev" : "@31921",
  "fest_rev" : "@19997",
  "firefox_jsshell_rev" : "@32115",
  "gsutil_rev" : "@33376",
  "guava_rev" : "@19997",
  "hamcrest_rev" : "@19997",
  "json_rev" : "@19997",
  "junit_rev" : "@19997",
  "mockito_rev" : "@19997",
  "snakeyaml_rev" : "@19997",
  "stripjar_rev" : "@20110",
  "WebCore_rev" : "@34173",
  "weberknecht_rev" : "@33599",
  "bootstrap_css_rev" : "@28387",
  "font_awesome_rev": "@31824",
}

deps = {
  "dart":
    "/branches/bleeding_edge/dart",

  # Stuff needed for GYP to run.
  "dart/third_party/gyp":
      (Var("googlecode_url") % "gyp") + "/trunk" + Var("gyp_rev"),

  "dart/tests/co19/src": ((Var("googlecode_url") % "co19") +
      "/trunk/co19/tests/co19/src" + Var("co19_rev")),

  "dart/third_party/nss":
      Var("chromium_url") + "/trunk/deps/third_party/nss" + Var("nss_rev"),

  "dart/third_party/sqlite":
      Var("chromium_url") + "/trunk/src/third_party/sqlite" + Var("nss_rev"),

  "dart/third_party/zlib":
      Var("chromium_url") + "/trunk/src/third_party/zlib" + Var("nss_rev"),

  "dart/third_party/net_nss":
      Var("chromium_url") + "/trunk/src/net/third_party/nss" + Var("nss_rev"),

  "dart/third_party/7zip": "/third_party/7zip" + Var("7zip_rev"),
  "dart/third_party/apache_ant":
      "/third_party/apache_ant" + Var("apache_ant_rev"),
  "dart/third_party/apache_compress":
      "/third_party/apache_compress" + Var("apache_compress_rev"),
  "dart/third_party/args4j": "/third_party/args4j" + Var("args4j_rev"),
  "dart/third_party/bzip2": "/third_party/bzip2" + Var("bzip2_rev"),
  "dart/runtime/bin/vmservice/client/web/bootstrap_css":
      "/third_party/bootstrap_css" + Var("bootstrap_css_rev"),
  "dart/runtime/bin/vmservice/client/deployed/web/bootstrap_css":
      "/third_party/bootstrap_css" + Var("bootstrap_css_rev"),
  "dart/third_party/chrome": "/third_party/chrome" + Var("chrome_rev"),
  "dart/third_party/commons-io":
      "/third_party/commons-io" + Var("commons-io_rev"),
  "dart/third_party/commons-lang":
      "/third_party/commons-lang" + Var("commons-lang_rev"),
  "dart/third_party/eclipse": "/third_party/eclipse" + Var("eclipse_rev"),
  "dart/third_party/fest": "/third_party/fest" + Var("fest_rev"),
  "dart/third_party/firefox_jsshell":
      "/third_party/firefox_jsshell" + Var("firefox_jsshell_rev"),
  "dart/third_party/gsutil": "/third_party/gsutil" + Var("gsutil_rev"),
  "dart/third_party/guava": "/third_party/guava" + Var("guava_rev"),
  "dart/third_party/hamcrest": "/third_party/hamcrest" + Var("hamcrest_rev"),
  "dart/third_party/json": "/third_party/json" + Var("json_rev"),
  "dart/third_party/junit": "/third_party/junit" + Var("junit_rev"),
  "dart/third_party/mockito": "/third_party/mockito" + Var("mockito_rev"),
  "dart/third_party/snakeyaml": "/third_party/snakeyaml" + Var("snakeyaml_rev"),
  "dart/third_party/stripjar": "/third_party/stripjar" + Var("stripjar_rev"),
  "dart/third_party/d8": "/third_party/d8" + Var("d8_rev"),
  "dart/third_party/WebCore": "/third_party/WebCore" + Var("WebCore_rev"),
  "dart/third_party/weberknecht":
      "/third_party/weberknecht" + Var("weberknecht_rev"),

  "dart/third_party/font-awesome":
      "/third_party/font-awesome" + Var("font_awesome_rev"),
}

deps_os = {
  "android": {
    "dart/third_party//android_tools":
      Var("chromium_git") + "/android_tools.git" +
      "@e504b737693e96816b40e6ae80d177352c079c18",
  },
  "win": {
    "dart/third_party/cygwin":
      Var("chromium_url") + "/trunk/deps/third_party/cygwin@66844",
    "dart/third_party/drt_resources":
      Var("chromium_url") +
      "/trunk/src/webkit/tools/test_shell/resources@157099",
  },
  "unix": {
    "dart/third_party/clang": "/third_party/clang" + Var("clang_rev"),
  },
}

# TODO(iposva): Move the necessary tools so that hooks can be run
# without the runtime being available.
hooks = [
  {
    "pattern": ".",
    "action": ["python", "dart/tools/compiler_scripts/generate_my_projects.py"],
  },
  {
    "pattern": ".",
    "action": ["python", "dart/editor/build/generate_sources.py"],
  },
  {
    "pattern": ".",
    "action": ["python", "dart/tools/gyp_dart.py"],
  },
]
