# Copyright (c) 2012, the Dart project authors.  Please see the AUTHORS file
# for details. All rights reserved. Use of this source code is governed by a
# BSD-style license that can be found in the LICENSE file.

[ $compiler == none && ($runtime == drt || $runtime == dartium || $runtime == ContentShellOnAndroid) ]
bool_from_environment2_test: Skip
bool_from_environment_test: Skip
from_environment_const_type_test: Skip
from_environment_const_type_undefined_test: Skip
int_from_environment2_test: Skip
int_from_environment3_test: Skip
int_from_environment_test: Skip
string_from_environment2_test: Skip
string_from_environment3_test: Skip
string_from_environment_test: Skip

[ $compiler == none ]
unicode_test: Fail        # Bug 6706
compare_to2_test: Fail    # Bug 4018

symbol_test/01: Fail, Pass # bug 11669

# #void should be a valid symbol.
[ $compiler == none || $compiler == dart2js ]
symbol_reserved_word_test/02: CompileTimeError # bug 20191
symbol_reserved_word_test/05: CompileTimeError # bug 20191

[ $compiler == none && ($runtime == drt || $runtime == dartium || $runtime == ContentShellOnAndroid) ]
symbol_reserved_word_test/02: RuntimeError # bug 20191 / dartium/drt cannot detect CompileTimeErrors
symbol_reserved_word_test/05: RuntimeError # bug 20191 / dartium/drt cannot detect CompileTimeErrors

# new Symbol('void') should be allowed.
[ $compiler == dart2js ]
symbol_reserved_word_test/03: RuntimeError # bug 19972
int_parse_radix_test/01: Pass, Fail # JS implementations disagree on U+0085 being whitespace.
int_parse_radix_test/02: Fail # No bigints.
double_parse_test/01: Pass, Fail # JS implementations disagree on U+0085 being whitespace.
integer_to_radix_string_test: RuntimeError # issue 22045

# With the exception of 'void', const Symbol() should not accept reserved
# words.
[ $compiler == none || $compiler == dart2js ]
symbol_reserved_word_test/04: MissingCompileTimeError # bug 11669, 19972
symbol_reserved_word_test/07: MissingCompileTimeError # bug 11669, 19972
symbol_reserved_word_test/10: MissingCompileTimeError # bug 11669, 19972

[ $compiler == none && ($runtime == drt || $runtime == dartium || $runtime == ContentShellOnAndroid) ]
symbol_reserved_word_test/04: Fail # bug 11669, 19972 / dartium/drt cannot detect CompileTimeErrors
symbol_reserved_word_test/07: Fail # bug 11669, 19972 / dartium/drt cannot detect CompileTimeErrors
symbol_reserved_word_test/10: Fail # bug 11669, 19972 / dartium/drt cannot detect CompileTimeErrors

# With the exception of 'void', new Symbol() should not accept reserved words.
[ $compiler == none ]
symbol_reserved_word_test/06: RuntimeError # bug 11669
symbol_reserved_word_test/09: RuntimeError # bug 11669
symbol_reserved_word_test/12: RuntimeError # bug 11669

[ $compiler == none && $runtime != dartium && $runtime != drt && $runtime != ContentShellOnAndroid ]
symbol_test/02: MissingCompileTimeError # bug 11669
symbol_test/03: MissingCompileTimeError # bug 11669

[ $compiler == none ]
symbol_test/none: Fail # bug 11669
symbol_operator_test/03: Fail # bug 11669
string_case_test/01: Fail # Bug 18061

iterable_return_type_test/01: RuntimeError # Issue 13646
iterable_return_type_test/02: RuntimeError # Issue 13646

[ $compiler == none && ($runtime == drt || $runtime == dartium || $runtime == ContentShellOnAndroid) ]
main_test: Fail  # Dartium needs to check for both main() and main(args).

[ $compiler == none && $runtime == ContentShellOnAndroid ]
core_runtime_types_test: Pass, Fail # Issue 20525

[ $runtime == ff || $runtime == jsshell ]
unicode_test: Fail
# Firefox takes advantage of the ECMAScript number parsing cop-out clause
# (presumably added to allow Mozilla's existing behavior)
# and only looks at the first 20 significant digits.
# The Dart VM and the other ECMAScript implementations follow the correct
# IEEE-754 rounding algorithm.
double_parse_test: Fail, OK

[ $runtime == safari || $runtime == safarimobilesim ]
double_round3_test: Fail, OK # Runtime rounds 0.49999999999999994 to 1.
double_round_to_double2_test: Fail, OK # Runtime rounds 0.49999999999999994 to 1.

[ $runtime == ff ]
double_round3_test: Pass, Fail, OK # Fails on ff 34, passes on ff 35. Runtime rounds 0.49999999999999994 to 1.
double_round_to_double2_test: Pass, Fail, OK # Fails on ff 34, passes on ff 35. Runtime rounds 0.49999999999999994 to 1.

[ $runtime == opera ]
core_runtime_types_test: Fail
null_nosuchmethod_test: Fail # Issue: 7413
unicode_test: Fail # Issue 14694

[ $compiler == dart2js ]
growable_list_test: RuntimeError # Fails to detect concurrent modification in addAll.
error_stack_trace1_test: RuntimeError # Issue 12399
hash_set_test/01: RuntimeError # Issue 11551
integer_to_string_test/01: RuntimeError # Issue 1533
iterable_return_type_test/01: RuntimeError # Issue 20085
iterable_return_type_test/02: RuntimeError # Dart2js does not support Uint64*.

big_integer_*: Skip # VM specific test.
bit_twiddling_bigint_test: RuntimeError # Requires bigint support.
compare_to2_test: RuntimeError, OK    # Requires bigint support.
string_base_vm_test: RuntimeError, OK # VM specific test.
nan_infinity_test/01: Fail # Issue 11551
regexp/pcre_test: Pass, Slow # Issue 21593
regress_r21715_test: RuntimeError # Requires bigint support.

[ $compiler == dart2js && $runtime == none ]
*: Fail, Pass # TODO(ahe): Triage these tests.

[ $compiler == dart2js && $runtime == chromeOnAndroid ]
list_as_map_test: Pass, Slow # TODO(kasperl): Please triage.

[ $compiler == dart2js && ($runtime == firefox || $runtime == safari || $runtime == chrome || $runtime == drt) ]

[ $compiler == dart2js && ($runtime == safari || $runtime == safarimobilesim) ]
string_split_test: RuntimeError # Issue 21431

[ $compiler == dart2js && (($runtime == safari && $builder_tag == mac10_7) || $runtime == safarimobilesim) ]
list_test/01: Fail # Safari bug: Array(-2) seen as dead code.
string_trimlr_test/none: Fail

[ $compiler == dart2js && $runtime == ie10 ]
string_case_test/01: Fail, OK  # Bug in IE.
string_case_test/02: Fail, OK  # Bug in IE.

[ $compiler == dart2js && ($runtime == ff || $runtime == jsshell) ]
string_case_test/01: Fail, OK  # Bug in Firefox.

[ $compiler == dart2js && $runtime == dartium ]
string_case_test/02: Fail, OK  # Bug in dartium version of V8.
string_case_test/03: Fail, OK  # Bug in dartium version of V8.

[ $compiler == dartanalyzer ]
from_environment_const_type_test: Skip # The -D option that defines a constant
# for the Dart vm is not accepted by the deprecated java dartanalyzer.
int_parse_radix_test: Fail, OK # Test contains errors but doesn’t mark them as expected
list_insert_test: Fail, OK # Test contains errors but doesn’t mark them as expected
list_removeat_test: Fail, OK # Test contains errors but doesn’t mark them as expected

# Issue 16391. These tests are supposed to produce a compile time
# error in checked mode, but they don't:
[ $compiler == dartanalyzer && $checked ]
from_environment_const_type_test/02: MissingCompileTimeError # Issue 16391
from_environment_const_type_test/03: MissingCompileTimeError # Issue 16391
from_environment_const_type_test/04: MissingCompileTimeError # Issue 16391
from_environment_const_type_test/06: MissingCompileTimeError # Issue 16391
from_environment_const_type_test/07: MissingCompileTimeError # Issue 16391
from_environment_const_type_test/08: MissingCompileTimeError # Issue 16391
from_environment_const_type_test/09: MissingCompileTimeError # Issue 16391
from_environment_const_type_test/11: MissingCompileTimeError # Issue 16391
from_environment_const_type_test/12: MissingCompileTimeError # Issue 16391
from_environment_const_type_test/13: MissingCompileTimeError # Issue 16391
from_environment_const_type_test/14: MissingCompileTimeError # Issue 16391
from_environment_const_type_test/16: MissingCompileTimeError # Issue 16391
from_environment_const_type_undefined_test/02: MissingCompileTimeError # Issue 16391
from_environment_const_type_undefined_test/03: MissingCompileTimeError # Issue 16391
from_environment_const_type_undefined_test/04: MissingCompileTimeError # Issue 16391
from_environment_const_type_undefined_test/06: MissingCompileTimeError # Issue 16391
from_environment_const_type_undefined_test/07: MissingCompileTimeError # Issue 16391
from_environment_const_type_undefined_test/08: MissingCompileTimeError # Issue 16391

# Analyzer's implementation of fromEnvironment assumes that undefined
# environment variables have an unspecified value (rather than being
# null) because it is expected that the user will supply a value when
# the code is run.  This means that it produces slightly different
# error messages than the VM and Dart2js.
[ $compiler == dart2analyzer && $checked ]
from_environment_const_type_undefined_test/09: CompileTimeError
from_environment_const_type_undefined_test/11: CompileTimeError
from_environment_const_type_undefined_test/12: CompileTimeError
from_environment_const_type_undefined_test/13: CompileTimeError
from_environment_const_type_undefined_test/14: CompileTimeError
from_environment_const_type_undefined_test/16: CompileTimeError

[ $compiler == dart2analyzer ]
int_parse_radix_test: fail
list_insert_test: fail
list_removeat_test: fail

[ $compiler == dartanalyzer || $compiler == dart2analyzer ]
hash_set_type_check_test: StaticWarning, OK # Tests failing type tests.
error_stack_trace_test: StaticWarning, OK # Test generates errors on purpose.
iterable_element_at_test: StaticWarning, OK # Test generates errors on purpose.
num_clamp_test: StaticWarning, OK # Test generates errors on purpose.
string_test: StaticWarning, OK # Test generates error on purpose.
duration2_test: StaticWarning, OK # Test generates error on purpose.

[ $system == windows && $arch == x64 ]
stopwatch_test: Skip  # Flaky test due to expected performance behaviour.

[ $runtime != d8 && $runtime != vm ]
# The regexp tests are not verified to work on non d8/vm platforms yet.
regexp/*: Skip

[ $runtime == vm ]
regexp/global_test: Skip # Timeout. Issue 21709 and 21708

[ $mode == debug ]
regexp/pcre_test: Pass, Slow # Timeout. Issue 22008

[ $runtime == vm && $arch == simarmv5te ]
int_parse_radix_test/*: Pass, Slow
big_integer_parsed_mul_div_vm_test: Pass, Slow

[ $compiler == dart2js && $cps_ir ]
apply2_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
apply_test: Crash # Please triage this failure.
bool_from_environment_test: RuntimeError # Please triage this failure.
collection_removes_test: RuntimeError # Please triage this failure.
const_list_remove_range_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
const_list_set_range_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
core_runtime_types_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
date_time_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
double_ceil2_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
double_ceil_test: RuntimeError # Please triage this failure.
double_floor2_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
double_floor_test: RuntimeError # Please triage this failure.
double_parse_test/01: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
double_parse_test/none: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
double_round2_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
double_round4_test: RuntimeError # Please triage this failure.
double_round_test: RuntimeError # Please triage this failure.
double_truncate2_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
double_truncate_test: RuntimeError # Please triage this failure.
duration2_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
duration_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
error_stack_trace1_test: Pass # Please triage this failure.
error_stack_trace2_test: Crash # unsupported element kind: cyclicStatic:field
error_stack_trace_test: Crash # (switch (5){case 5:nested();default:Expect.fail("Should not reach");}): Unhandled node
expando_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
growable_list_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
has_next_iterator_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
hash_map2_test: Crash # Instance of 'TypeOperator': type check unimplemented for Map<int, String>.
hash_set_test/01: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
hash_set_test/none: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
hash_set_type_check_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
hashcode_test: Crash # Instance of 'TypeOperator': type casts not implemented.
int_from_environment_test: RuntimeError # Please triage this failure.
int_parse_radix_test/01: Crash # Please triage this failure.
int_parse_radix_test/02: Crash # Please triage this failure.
int_parse_radix_test/none: Crash # Please triage this failure.
is_operator_basic_types_test: RuntimeError # Please triage this failure.
iterable_element_at_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
iterable_expand_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
iterable_first_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
iterable_first_where_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
iterable_fold_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
iterable_generate_test: Crash # Instance of 'TypeOperator': type check unimplemented for Iterable<int>.
iterable_last_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
iterable_last_where_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
iterable_mapping_test: RuntimeError # Please triage this failure.
iterable_reduce_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
iterable_return_type_test/01: Crash # Instance of 'TypeOperator': type check unimplemented for Map<int, int>.
iterable_return_type_test/02: Crash # Instance of 'TypeOperator': type check unimplemented for Map<int, int>.
iterable_return_type_test/none: Crash # Instance of 'TypeOperator': type check unimplemented for Map<int, int>.
iterable_single_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
iterable_single_where_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
iterable_skip_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
iterable_take_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
iterable_to_list_test: Crash # Instance of 'TypeOperator': type check unimplemented for List<int>.
iterable_to_set_test: Crash # Instance of 'TypeOperator': type check unimplemented for Set<int>.
json_map_test: Crash # Instance of 'TypeOperator': type check unimplemented for Map<String, dynamic>.
linked_hash_map_from_iterable_test: Crash # Instance of 'TypeOperator': type check unimplemented for Map<int, String>.
linked_hash_map_from_iterables_test: Crash # Instance of 'TypeOperator': type check unimplemented for Map<int, String>.
list_as_map_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
list_fill_range_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
list_filled_type_argument_test: Crash # Instance of 'TypeOperator': type check unimplemented for List<int>.
list_first_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
list_fixed_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
list_for_each_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
list_get_range_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
list_growable_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
list_insert_all_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
list_insert_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
list_iterators_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
list_last_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
list_remove_range_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
list_removeat_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
list_replace_range_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
list_set_all_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
list_set_range_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
list_sublist_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
list_test/01: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
list_test/none: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
list_to_string2_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
list_to_string_test: RuntimeError # Please triage this failure.
list_unmodifiable_test: Crash # Instance of 'TypeOperator': type check unimplemented for List<E>.
map_from_iterable_test: Crash # Instance of 'TypeOperator': type check unimplemented for Map<String, String>.
map_from_iterables_test: Crash # Instance of 'TypeOperator': type check unimplemented for Map<int, String>.
map_keys2_test: Crash # Instance of 'TypeOperator': type check unimplemented for Iterable<String>.
map_test: Crash # Please triage this failure.
map_to_string_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
map_values2_test: Crash # Instance of 'TypeOperator': type check unimplemented for Iterable<int>.
map_values3_test: Crash # Instance of 'TypeOperator': type check unimplemented for Iterable<String>.
map_values4_test: Crash # Instance of 'TypeOperator': type check unimplemented for Iterable<String>.
null_nosuchmethod_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
null_test: Crash # Instance of 'TypeOperator': type check unimplemented for dynamic.
num_clamp_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
num_parse_test/01: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
num_parse_test/none: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
num_sign_test: Crash # unsupported element kind: numbers:field
queue_first_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
queue_last_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
queue_single_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
queue_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
regexp/compile-crash_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
regexp/compile_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
regexp/early-acid3-86_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
regexp/invalid-range-in-class_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
regexp/multiline_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
regexp/no-extensions_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
regexp/pcre_test: Crash # Please triage this failure.
regexp/range-out-of-order_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
regexp/regexp_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
set_test: Crash # Instance of 'TypeOperator': type casts not implemented.
set_to_string_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
shuffle_test: RuntimeError # Please triage this failure.
splay_tree_from_iterable_test: Crash # Instance of 'TypeOperator': type check unimplemented for Map<int, String>.
splay_tree_from_iterables_test: Crash # Instance of 'TypeOperator': type check unimplemented for Map<int, String>.
splay_tree_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
string_buffer_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
string_codeunits_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
string_from_environment2_test: RuntimeError # Please triage this failure.
string_from_environment_test: RuntimeError # Please triage this failure.
string_fromcharcode_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
string_fromcharcodes_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
string_operations_with_null_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
string_pattern_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
string_replace_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
string_runes_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
string_source_test: Crash # Instance of 'TypeOperator': type casts not implemented.
string_substring_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
string_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
symbol_operator_test/03: Crash # unsupported element kind: $:field
symbol_operator_test/none: Crash # unsupported element kind: $:field
symbol_reserved_word_test/03: Pass # Please triage this failure.
symbol_reserved_word_test/06: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
symbol_reserved_word_test/09: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
symbol_reserved_word_test/12: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
symbol_test/none: Crash # Please triage this failure.
uri_file_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
uri_ipv4_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
uri_ipv6_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
uri_normalize_path_test: RuntimeError # Please triage this failure.
uri_path_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
uri_query_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
uri_scheme_test: Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
uri_test: Crash # Please triage this failure.
