# Copyright (c) 2012, the Dart project authors.  Please see the AUTHORS file
# for details. All rights reserved. Use of this source code is governed by a
# BSD-style license that can be found in the LICENSE file.

[ $compiler == dart2js ]
sync_generator2_test/07: MissingCompileTimeError # Issue 22324
sync_generator2_test/08: MissingCompileTimeError # Issue 22324
sync_generator2_test/10: MissingCompileTimeError # Issue 22324
getter_setter_in_lib_test: Fail # Issue 23288

async_star_test/02: RuntimeError # 22853
async_star_test/05: RuntimeError, Timeout

try_catch_on_syntax_test/10: Fail # Issue 19823
try_catch_on_syntax_test/11: Fail # Issue 19823

[ $compiler == dart2js && $runtime == jsshell ]
await_for_test: Skip # Jsshell does not provide periodic timers, Issue 7728
async_star_test: RuntimeError # Jsshell does not provide non-zero timers, Issue 7728

[ $compiler == dart2js ]
symbol_literal_test/*: Fail # Issue 21825
constructor_duplicate_final_test/01: Fail # Issue 13363
constructor_duplicate_final_test/02: Fail # Issue 13363
override_inheritance_mixed_test/08: Fail # Issue 18124
override_inheritance_mixed_test/09: Fail # Issue 18124
bad_constructor_test/05: CompileTimeError # Issue 13669
full_stacktrace1_test: Pass, RuntimeError # Issue 12698
full_stacktrace2_test: Pass, RuntimeError # Issue 12698
full_stacktrace3_test: Pass, RuntimeError # Issue 12698
stacktrace_test: Pass, RuntimeError # # Issue 12698
stacktrace_rethrow_nonerror_test: Pass, RuntimeError # Issue 12698
stacktrace_rethrow_error_test: Pass, RuntimeError # Issue 12698
instantiate_type_variable_test/01: CompileTimeError # Issue 13631
library_ambiguous_test/00: CompileTimeError # Issue 13632
library_ambiguous_test/01: CompileTimeError # Issue 13632
library_ambiguous_test/02: CompileTimeError # Issue 13632
library_ambiguous_test/03: CompileTimeError # Issue 13632
type_variable_conflict_test/01: Fail # Issue 13702
type_variable_conflict_test/02: Fail # Issue 13702
type_variable_conflict_test/03: Fail # Issue 13702
type_variable_conflict_test/04: Fail # Issue 13702
type_variable_conflict_test/05: Fail # Issue 13702
type_variable_conflict_test/06: Fail # Issue 13702
mixin_forwarding_constructor4_test/01: MissingCompileTimeError # Issue 15101
mixin_forwarding_constructor4_test/02: MissingCompileTimeError # Issue 15101
mixin_forwarding_constructor4_test/03: MissingCompileTimeError # Issue 15101
mixin_super_constructor_named_test/01: Fail # Issue 15101
mixin_super_constructor_positionals_test/01: Fail # Issue 15101

ref_before_declaration_test/00: MissingCompileTimeError
ref_before_declaration_test/01: MissingCompileTimeError
ref_before_declaration_test/02: MissingCompileTimeError
ref_before_declaration_test/03: MissingCompileTimeError
ref_before_declaration_test/04: MissingCompileTimeError
ref_before_declaration_test/05: MissingCompileTimeError
ref_before_declaration_test/06: MissingCompileTimeError

regress_22976_test/01: CompileTimeError # Issue 23132
regress_22976_test/02: CompileTimeError # Issue 23132

# Null-aware operators aren't implemented in dart2js yet.
if_null_evaluation_order_test: CompileTimeError
if_null_precedence_test: CompileTimeError
if_null_behavior_test: CompileTimeError
if_null_assignment_behavior_test: CompileTimeError
if_null_assignment_static_test: CompileTimeError
conditional_property_assignment_test: CompileTimeError
conditional_property_access_test: CompileTimeError
conditional_method_invocation_test: CompileTimeError
super_conditional_operator_test/none: CompileTimeError


# VM specific tests that should not be run by dart2js.
vm/*: Skip # Issue 12699

[ $compiler == dart2js && $checked ]
type_variable_bounds_test/02: Fail # Issue 12702
type_variable_bounds2_test/01: Fail # Issue 12702
type_variable_bounds2_test/04: Fail # Issue 12702
type_variable_bounds2_test/06: Pass # Issue 12702 (pass for the wrong reasons).
type_variable_bounds3_test/00: Fail # Issue 12702
closure_type_test: Fail # Issue 12745
malbounded_redirecting_factory_test/02: Fail # Issue 12825
malbounded_redirecting_factory_test/03: Fail # Issue 12825
malbounded_redirecting_factory2_test/02: Fail # Issue 12825
malbounded_redirecting_factory2_test/03: Fail # Issue 12825
malbounded_instantiation_test/01: Fail # Issue 12702
malbounded_type_cast_test: Fail # Issue 14121
malbounded_type_cast2_test: Fail # Issue 14121
malbounded_type_test_test/03: Fail # Issue 14121
malbounded_type_test_test/04: Fail # Issue 14121
malbounded_type_test2_test: Fail # Issue 14121
default_factory2_test/01: Fail # Issue 14121

[ $compiler == dart2js && $checked ]
compile_time_constant_checked5_test/06: Fail # Issue 23182
compile_time_constant_checked5_test/07: Fail # Issue 23182
compile_time_constant_checked5_test/10: Fail # Issue 23182
compile_time_constant_checked5_test/11: Fail # Issue 23182
compile_time_constant_checked5_test/12: Fail # Issue 23182
compile_time_constant_checked5_test/15: Fail # Issue 23182
compile_time_constant_checked5_test/16: Fail # Issue 23182
compile_time_constant_checked5_test/17: Fail # Issue 23182
compile_time_constant_checked5_test/20: Fail # Issue 23182
compile_time_constant_checked5_test/21: Fail # Issue 23182
compile_time_constant_checked5_test/22: Fail # Issue 23182
compile_time_constant_checked5_test/23: Fail # Issue 23182
compile_time_constant_checked5_test/24: Fail # Issue 23182
compile_time_constant_checked5_test/25: Fail # Issue 23182

[ $compiler == dart2js && $unchecked ]
type_checks_in_factory_method_test: RuntimeError # Issue 12746
assertion_test: RuntimeError # Issue 12748
generic_test: RuntimeError, OK
map_literal4_test: RuntimeError, OK # Checked mode required.
named_parameters_type_test/01: MissingRuntimeError, OK
named_parameters_type_test/02: MissingRuntimeError, OK
named_parameters_type_test/03: MissingRuntimeError, OK
positional_parameters_type_test/01: MissingRuntimeError, OK
positional_parameters_type_test/02: MissingRuntimeError, OK
issue13474_test: RuntimeError, OK

[ $compiler == dart2js && $unchecked && $minified ]
f_bounded_quantification5_test: Fail, OK # Issue 12605

[ $compiler == dart2js && $minified ]
cyclic_type_test/0*: Fail # Issue 12605
cyclic_type2_test: Fail # Issue 12605
f_bounded_quantification4_test: Fail, OK # Issue 12605
mixin_generic_test: Fail # Issue 12605
mixin_mixin2_test: Fail # Issue 12605
mixin_mixin3_test: Fail # Issue 12605
mixin_mixin4_test: Fail # Issue 12605
mixin_mixin5_test: Fail # Issue 12605
mixin_mixin6_test: Fail # Issue 12605
mixin_mixin_bound_test: RuntimeError # Issue 12605
mixin_mixin_bound2_test: RuntimeError # Issue 12605

[ $compiler == dart2js ]
malformed_test/none: Fail # Expect failure in lib/_internal/compiler/js_lib/preambles/d8.js
generic_field_mixin4_test: Crash # Issue 18651
generic_field_mixin5_test: Crash # Issue 18651

type_variable_conflict2_test/01: RuntimeError # Issue 19725

branch_canonicalization_test: RuntimeError # Issue 638.
identical_closure2_test: RuntimeError # Issue 1533, Issue 12596
integer_division_by_zero_test: RuntimeError # Issue 8301
built_in_identifier_prefix_test: CompileTimeError # Issue 6972
number_identity2_test: RuntimeError # Issue 12596
new_expression_type_args_test/00: CompileTimeError # Issue 5519
new_expression_type_args_test/01: CompileTimeError # Issue 5519
double_int_to_string_test: RuntimeError # Issue 1533
mint_arithmetic_test: RuntimeError # Issue 1533
left_shift_test: RuntimeError # Issue 1533
factory_redirection_test/01: CompileTimeError # Issue 12752
bad_override_test/01: CompileTimeError # Issue 11496
bad_override_test/02: CompileTimeError # Issue 11496
constructor_named_arguments_test/01: CompileTimeError # Issue 5519
not_enough_positional_arguments_test/01: CompileTimeError # Issue 12838
not_enough_positional_arguments_test/02: CompileTimeError # Issue 12838
not_enough_positional_arguments_test/05: CompileTimeError # Issue 12838
metadata_test: CompileTimeError # Issue 5841
infinity_test: RuntimeError # Issue 4984
mixin_mixin2_test: RuntimeError # Issue 13109.
mixin_mixin3_test: RuntimeError # Issue 13109.
mixin_mixin7_test: RuntimeError # Issue 13109.
mixin_regress_13688_test: RuntimeError # Issue 13109.
modulo_test: RuntimeError # Issue 15246
truncdiv_test: RuntimeError # Issue 15246
invocation_mirror2_test: RuntimeError # Issue 6490 (wrong retval).
generic_closure_test: RuntimeError # Issue 12605
const_switch_test/02: RuntimeError # Issue 17960
const_switch_test/04: RuntimeError # Issue 17960

const_dynamic_type_literal_test/02: CompileTimeError # Issue 23009
const_dynamic_type_literal_test/03: CompileTimeError # Issue 23009

# Compilation errors.
method_override5_test: RuntimeError # Issue 12809
external_test/10: CompileTimeError # Issue 12887
external_test/13: CompileTimeError # Issue 12887
external_test/20: CompileTimeError # Issue 12887
list_literal4_test: RuntimeError # Issue 12890
built_in_identifier_test/01: CompileTimeError # Issue 13022

scope_variable_test/01: MissingCompileTimeError # Issue 13016

numbers_test: RuntimeError, OK # Issue 1533
canonical_const2_test: RuntimeError, OK # Issue 1533
bit_operations_test: RuntimeError, OK # Issue 1533
expect_test: RuntimeError, OK # Issue 13080

[ $compiler == dart2js && $runtime == none ]
*: Fail, Pass # TODO(ahe): Triage these tests.

[ $compiler == dart2js && $runtime == chrome && $system == macos ]
await_future_test: Pass, Timeout # Issue 22695.
async_await_test/none: Pass, Timeout # Issue 22695.
async_await_test/02: Pass, Timeout # Issue 22695.
async_await_test/03: Pass, Timeout # Issue 22695.

[ $compiler == dart2js && ($runtime == safari || $runtime == safarimobilesim)]
round_test: Fail, OK # Common JavaScript engine Math.round bug.

[ $compiler == dart2js && $runtime == ff ]
round_test: Pass, Fail, OK # Fixed in ff 35. Common JavaScript engine Math.round bug.

[ $compiler == dart2js && ($runtime == safari || $runtime == safarimobilesim)]
# Safari codegen bug, fixed on some versions of Safari 7.1 (Version 7.1 (9537.85.10.17.1))
call_through_getter_test: Fail, OK

[ $compiler == dart2js && $runtime == chromeOnAndroid ]
override_field_test/02: Pass, Slow # TODO(kasperl): Please triage.

[ $minified ]
stack_trace_test: Fail, OK # Stack trace not preserved in minified code.
regress_21795_test: RuntimeError # Issue 12605

[ $compiler == dart2js && $runtime == d8 && $system == windows ]
# Detection of d8 runtime does not work on Windows so the runtime result is
# unreliable; at the time of writing, 32 passed, 31 failed with runtime error.
# Marked with Pass,RuntimeError to avoid undetected compile-time failures.
*deferred*: Pass,RuntimeError # Issue 17458
cha_deopt*: Pass,RuntimeError # Issue 17458
regress_22443_test: Pass,RuntimeError # Issue 17458

[ $compiler == dart2js && $cps_ir ]
aborting_switch_case_test : Crash # bailout: (switch (42){case 42:foo();foo();break;}): Unhandled node
abstract_exact_selector_test/01 : Crash # bailout: unsupported element kind: a:field
abstract_exact_selector_test/none : Crash # bailout: unsupported element kind: a:field
abstract_getter_test/01 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
abstract_object_method_test : Crash # bailout: unsupported element kind: a:field
abstract_runtime_error_test/01 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
abstract_runtime_error_test/02 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
arithmetic_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
assign_to_type_test/01 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
assign_to_type_test/02 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
assign_to_type_test/03 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
assign_to_type_test/04 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
assign_top_method_test/01 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
async_and_or_test : Crash # bailout: (test()async{await test1();await test2();}): cannot handle async/sync*/async* functions
async_await_catch_regression_test : Crash # bailout: (test()async{var exception;try {await foo();}catch (e){print(await (e));await (exception=await e);}Expect.equals(42,exception);}): cannot handle async/sync*/async* functions
async_await_syntax_test/a01a : Crash # bailout: (a01a()async=>null;): cannot handle async/sync*/async* functions
async_await_syntax_test/a02a : Crash # bailout: (a02a()async{}): cannot handle async/sync*/async* functions
async_await_syntax_test/a03a : Crash # bailout: (a03a()async*{}): cannot handle async/sync*/async* functions
async_await_syntax_test/a03b : Crash # bailout: (a03b()async*{}): cannot handle async/sync*/async* functions
async_await_syntax_test/a04a : Crash # bailout: (a04a()sync*{}): cannot handle async/sync*/async* functions
async_await_syntax_test/a04c : Crash # bailout: (a04c()sync*{}): cannot handle async/sync*/async* functions
async_await_syntax_test/a05a : Crash # bailout: (a05a()async{await 0;}): cannot handle async/sync*/async* functions
async_await_syntax_test/a05b : Crash # bailout: (a05b()async{await (a){};await (0);}): cannot handle async/sync*/async* functions
async_await_syntax_test/a06a : Crash # bailout: (a06a()async{await for(var o in st){}}): cannot handle async/sync*/async* functions
async_await_syntax_test/a07a : Crash # bailout: (a07a()sync*{yield 0;}): cannot handle async/sync*/async* functions
async_await_syntax_test/a08a : Crash # bailout: (a08a()sync*{yield* [] ;}): cannot handle async/sync*/async* functions
async_await_syntax_test/a09a : Crash # bailout: (a09a()async*{yield 0;}): cannot handle async/sync*/async* functions
async_await_syntax_test/a10a : Crash # bailout: (a10a()async*{yield* [] ;}): cannot handle async/sync*/async* functions
async_await_syntax_test/a11a : Crash # Assertion failure: function(throwNoSuchMethod) has not been resolved.
async_await_syntax_test/a11b : Crash # bailout: (get sync sync*{}): cannot handle async/sync*/async* functions
async_await_syntax_test/a11c : Crash # bailout: (get async async{}): cannot handle async/sync*/async* functions
async_await_syntax_test/a11d : Crash # bailout: (get async async*{}): cannot handle async/sync*/async* functions
async_await_syntax_test/a12g : Crash # bailout: (get a12g async=>null;): cannot handle async/sync*/async* functions
async_await_syntax_test/b01a : Crash # bailout: (b01a()async=>null;): cannot handle async/sync*/async* functions
async_await_syntax_test/b02a : Crash # bailout: (b02a()async{}): cannot handle async/sync*/async* functions
async_await_syntax_test/b03a : Crash # bailout: (b03a()async*{}): cannot handle async/sync*/async* functions
async_await_syntax_test/b04a : Crash # bailout: (b04a()sync*{}): cannot handle async/sync*/async* functions
async_await_syntax_test/b05a : Crash # bailout: (b05a()async{await 0;}): cannot handle async/sync*/async* functions
async_await_syntax_test/b06a : Crash # bailout: (b06a()async{await for(var o in st){}}): cannot handle async/sync*/async* functions
async_await_syntax_test/b07a : Crash # bailout: (b07a()sync*{yield 0;}): cannot handle async/sync*/async* functions
async_await_syntax_test/b08a : Crash # bailout: (b08a()sync*{yield* [] ;}): cannot handle async/sync*/async* functions
async_await_syntax_test/b09a : Crash # bailout: (b09a()async*{yield 0;}): cannot handle async/sync*/async* functions
async_await_syntax_test/b10a : Crash # bailout: (b10a()async*{yield* [] ;}): cannot handle async/sync*/async* functions
async_await_syntax_test/b11b : Crash # bailout: (get sync sync*{}): cannot handle async/sync*/async* functions
async_await_syntax_test/b11c : Crash # bailout: (get async async{}): cannot handle async/sync*/async* functions
async_await_syntax_test/b11d : Crash # bailout: (get async async*{}): cannot handle async/sync*/async* functions
async_await_syntax_test/b12g : Crash # bailout: (get b12g async=>null;): cannot handle async/sync*/async* functions
async_await_syntax_test/c01a : Crash # bailout: (c01a()async=>null;): cannot handle async/sync*/async* functions
async_await_syntax_test/c02a : Crash # bailout: (c02a()async{}): cannot handle async/sync*/async* functions
async_await_syntax_test/c03a : Crash # bailout: (c03a()async*{}): cannot handle async/sync*/async* functions
async_await_syntax_test/c04a : Crash # bailout: (c04a()sync*{}): cannot handle async/sync*/async* functions
async_await_syntax_test/c05a : Crash # bailout: (c05a()async{await 0;}): cannot handle async/sync*/async* functions
async_await_syntax_test/c06a : Crash # bailout: (c06a()async{await for(var o in st){}}): cannot handle async/sync*/async* functions
async_await_syntax_test/c07a : Crash # bailout: (c07a()sync*{yield 0;}): cannot handle async/sync*/async* functions
async_await_syntax_test/c08a : Crash # bailout: (c08a()sync*{yield* [] ;}): cannot handle async/sync*/async* functions
async_await_syntax_test/c09a : Crash # bailout: (c09a()async*{yield 0;}): cannot handle async/sync*/async* functions
async_await_syntax_test/c10a : Crash # bailout: (c10a()async*{yield* [] ;}): cannot handle async/sync*/async* functions
async_await_syntax_test/d01a : Crash # bailout: (()async=>null): cannot handle async/sync*/async* functions
async_await_syntax_test/d02a : Crash # bailout: (()async{}): cannot handle async/sync*/async* functions
async_await_syntax_test/d03a : Crash # bailout: (()async*{}): cannot handle async/sync*/async* functions
async_await_syntax_test/d04a : Crash # bailout: (()sync*{}): cannot handle async/sync*/async* functions
async_await_syntax_test/d05a : Crash # bailout: (()async{await 0;}): cannot handle async/sync*/async* functions
async_await_syntax_test/d06a : Crash # bailout: (()async{await for(var o in st){}}): cannot handle async/sync*/async* functions
async_await_syntax_test/d07a : Crash # bailout: (()sync*{yield 0;}): cannot handle async/sync*/async* functions
async_await_syntax_test/d08a : Crash # bailout: (()sync*{yield* [] ;}): cannot handle async/sync*/async* functions
async_await_syntax_test/d08b : Crash # bailout: (()sync*{yield* 0+1;}): cannot handle async/sync*/async* functions
async_await_syntax_test/d09a : Crash # bailout: (()async*{yield 0;}): cannot handle async/sync*/async* functions
async_await_syntax_test/d10a : Crash # bailout: (()async*{yield* [] ;}): cannot handle async/sync*/async* functions
async_await_test/02 : Crash # bailout: (f()async{return id(42);}): cannot handle async/sync*/async* functions
async_await_test/03 : Crash # bailout: (f()async{return id(42);}): cannot handle async/sync*/async* functions
async_await_test/none : Crash # bailout: (f()async{return id(42);}): cannot handle async/sync*/async* functions
async_break_in_finally_test : Crash # bailout: (test()async{Expect.equals(42,await then42());Expect.equals(43,await then43());Expect.equals(42,now42());Expect.equals(43,now43());}): cannot handle async/sync*/async* functions
async_continue_label_test/await_in_body : Crash # bailout: (test()async{await test1();await test2();await test3();await test4();}): cannot handle async/sync*/async* functions
async_continue_label_test/await_in_condition : Crash # bailout: (test()async{await test1();await test2();await test3();await test4();}): cannot handle async/sync*/async* functions
async_continue_label_test/await_in_init : Crash # bailout: (test()async{await test1();await test2();await test3();await test4();}): cannot handle async/sync*/async* functions
async_continue_label_test/await_in_update : Crash # bailout: (test()async{await test1();await test2();await test3();await test4();}): cannot handle async/sync*/async* functions
async_continue_label_test/none : Crash # bailout: (test()async{await test1();await test2();await test3();await test4();}): cannot handle async/sync*/async* functions
async_control_structures_test : Crash # Instance of 'TypeOperator': type check unimplemented for Future.
async_finally_rethrow_test : Crash # bailout: (main()async{var error="no error";try {await foo();}catch (e){error=e;}Expect.equals("error",error);}): cannot handle async/sync*/async* functions
async_or_generator_return_type_stacktrace_test/01 : Crash # bailout: (void badReturnTypeAsync()async{}): cannot handle async/sync*/async* functions
async_or_generator_return_type_stacktrace_test/02 : Crash # bailout: (void badReturnTypeAsyncStar()async*{}): cannot handle async/sync*/async* functions
async_or_generator_return_type_stacktrace_test/03 : Crash # bailout: (void badReturnTypeSyncStar()sync*{}): cannot handle async/sync*/async* functions
async_regression_23058_test : Crash # bailout: (foo()async{return x.foo==2?42:x.foo;}): cannot handle async/sync*/async* functions
async_rethrow_test : Crash # bailout: (rethrowString()async{try {throw exceptionString;}catch (e){await 1;rethrow;}}): cannot handle async/sync*/async* functions
async_return_types_test/nestedFuture : Crash # bailout: (test()async{Expect.equals(3,await foo1());Expect.equals(3,await foo2());Expect.equals("String",await foo3());Expect.equals("String",await foo4());Expect.equals(3,await foo5());Expect.equals(3,await await foo6());Expect.equals(3,await await foo7());}): cannot handle async/sync*/async* functions
async_return_types_test/none : Crash # bailout: (test()async{Expect.equals(3,await foo1());Expect.equals(3,await foo2());Expect.equals("String",await foo3());Expect.equals("String",await foo4());Expect.equals(3,await foo5());Expect.equals(3,await await foo6());Expect.equals(3,await await foo7());}): cannot handle async/sync*/async* functions
async_return_types_test/tooManyTypeParameters : Crash # bailout: (test()async{Expect.equals(3,await foo1());Expect.equals(3,await foo2());Expect.equals("String",await foo3());Expect.equals("String",await foo4());Expect.equals(3,await foo5());Expect.equals(3,await await foo6());Expect.equals(3,await await foo7());}): cannot handle async/sync*/async* functions
async_return_types_test/wrongReturnType : Crash # bailout: (test()async{Expect.equals(3,await foo1());Expect.equals(3,await foo2());Expect.equals("String",await foo3());Expect.equals("String",await foo4());Expect.equals(3,await foo5());Expect.equals(3,await await foo6());Expect.equals(3,await await foo7());}): cannot handle async/sync*/async* functions
async_return_types_test/wrongTypeParameter : Crash # bailout: (test()async{Expect.equals(3,await foo1());Expect.equals(3,await foo2());Expect.equals("String",await foo3());Expect.equals("String",await foo4());Expect.equals(3,await foo5());Expect.equals(3,await await foo6());Expect.equals(3,await await foo7());}): cannot handle async/sync*/async* functions
async_star_cancel_and_throw_in_finally_test : Crash # bailout: (test()async{var completer=new Completer();var s;s=foo().listen((e)async{Expect.equals(0,e);try {await s.cancel();Expect.fail("Did not throw");}catch (e){Expect.equals("Error",e);completer.complete();}});await completer.future;}): cannot handle async/sync*/async* functions
async_star_regression_23116_test : Crash # bailout: (test()async{Completer completer1=new Completer();Completer completer2=new Completer();StreamSubscription s=foo(completer1,completer2.future).listen((v)=>null);await completer1.future;s.pause();s.resume();completer2.complete(42);}): cannot handle async/sync*/async* functions
async_star_test/01 : Crash # bailout: (f()async*{}): cannot handle async/sync*/async* functions
async_star_test/02 : Crash # bailout: (f()async*{}): cannot handle async/sync*/async* functions
async_star_test/03 : Crash # bailout: (f()async*{}): cannot handle async/sync*/async* functions
async_star_test/04 : Crash # bailout: (f()async*{}): cannot handle async/sync*/async* functions
async_star_test/05 : Crash # bailout: (f()async*{}): cannot handle async/sync*/async* functions
async_star_test/none : Crash # bailout: (f()async*{}): cannot handle async/sync*/async* functions
async_switch_test/none : Crash # bailout: (test()async{Expect.equals(1,await foo1(1));Expect.equals(4,await foo1(2));Expect.equals(0,await foo1(3));Expect.equals(1,await foo2(futureOf(1)));Expect.equals(4,await foo2(futureOf(2)));Expect.equals(0,await foo2(futureOf(3)));Expect.equals(1,await foo3(1));Expect.equals(4,await foo3(2));Expect.equals(0,await foo3(3));Expect.equals(1,await foo4(futureOf(1)));Expect.equals(4,await foo4(futureOf(2)));Expect.equals(0,await foo4(futureOf(3)));}): cannot handle async/sync*/async* functions
async_switch_test/withDefault : Crash # bailout: (test()async{Expect.equals(1,await foo1(1));Expect.equals(4,await foo1(2));Expect.equals(2,await foo1(3));Expect.equals(1,await foo2(futureOf(1)));Expect.equals(4,await foo2(futureOf(2)));Expect.equals(2,await foo2(futureOf(3)));Expect.equals(1,await foo3(1));Expect.equals(4,await foo3(2));Expect.equals(2,await foo3(3));Expect.equals(1,await foo4(futureOf(1)));Expect.equals(4,await foo4(futureOf(2)));Expect.equals(2,await foo4(futureOf(3)));}): cannot handle async/sync*/async* functions
async_test/constructor2 : Crash # bailout: (bar(int p1,p2)async{var z=8;return p2+z+foo;}): cannot handle async/sync*/async* functions
async_test/constructor3 : Crash # bailout: (bar(int p1,p2)async{var z=8;return p2+z+foo;}): cannot handle async/sync*/async* functions
async_test/constructor4 : Crash # bailout: (bar(int p1,p2)async{var z=8;return p2+z+foo;}): cannot handle async/sync*/async* functions
async_test/none : Crash # bailout: (bar(int p1,p2)async{var z=8;return p2+z+foo;}): cannot handle async/sync*/async* functions
async_test/setter1 : Crash # bailout: (bar(int p1,p2)async{var z=8;return p2+z+foo;}): cannot handle async/sync*/async* functions
async_test/type-mismatch1 : Crash # bailout: (bar(int p1,p2)async{var z=8;return p2+z+foo;}): cannot handle async/sync*/async* functions
async_test/type-mismatch2 : Crash # bailout: (bar(int p1,p2)async{var z=8;return p2+z+foo;}): cannot handle async/sync*/async* functions
async_test/type-mismatch3 : Crash # bailout: (bar(int p1,p2)async{var z=8;return p2+z+foo;}): cannot handle async/sync*/async* functions
async_test/type-mismatch4 : Crash # bailout: (bar(int p1,p2)async{var z=8;return p2+z+foo;}): cannot handle async/sync*/async* functions
async_this_bound_test : Crash # bailout: (test()async{await testA();await testB();}): cannot handle async/sync*/async* functions
async_throw_in_catch_test/forceAwait : Crash # bailout: (test()async{await runTest("abceX",foo1,"Error2");await runTest("abdeX",foo2,"Error2");await runTest("abde",foo3);await runTest("abcd",foo4);await runTest("abcdX",foo5,"Error2");await runTest("abcde",foo6);await runTest("abcdX",foo7,"Error3");await runTest("abcdX",foo8,"Error3");await runTest("abcef",foo9);await runTest("abcdefgabcdefghi",foo10);await runTest("abcdaef",foo11);await runTest("abcdfg",foo12);await runTest("acdefgX",foo13,"Error");await runTest("abcdefgX",foo14,"Error3");await runTest("abcdefgX",foo14,"Error3");await runTest("abcdefg",foo15);await runTest("abcdfg",foo16);await runTest("abcdef",foo17);await runTest("abcde",foo18);}): cannot handle async/sync*/async* functions
async_throw_in_catch_test/none : Crash # bailout: (test()async{await runTest("abceX",foo1,"Error2");await runTest("abdeX",foo2,"Error2");await runTest("abde",foo3);await runTest("abcd",foo4);await runTest("abcdX",foo5,"Error2");await runTest("abcde",foo6);await runTest("abcdX",foo7,"Error3");await runTest("abcdX",foo8,"Error3");await runTest("abcef",foo9);await runTest("abcdefgabcdefghi",foo10);await runTest("abcdaef",foo11);await runTest("abcdfg",foo12);await runTest("acdefgX",foo13,"Error");await runTest("abcdefgX",foo14,"Error3");await runTest("abcdefgX",foo14,"Error3");await runTest("abcdefg",foo15);await runTest("abcdfg",foo16);await runTest("abcdef",foo17);await runTest("abcde",foo18);}): cannot handle async/sync*/async* functions
asyncstar_concat_test : Crash # bailout: (test()async{Expect.listEquals([1,2,3,11,12,13],await concat(range(1,4),range(11,14)).toList());}): cannot handle async/sync*/async* functions
asyncstar_throw_in_catch_test : Crash # bailout: (test()async{await runTest(foo1,"abcdYefC",null,true);await runTest(foo2,"abcX","Error",false);await runTest(foo3,"abcYX","Error",false);await runTest(foo4,"abcdYeYfX","Error2",false);}): cannot handle async/sync*/async* functions
asyncstar_yield_test : Crash # bailout: (test()async{Expect.listEquals([1,20],await (foo1().toList()));Expect.listEquals([0,1,2,3],await (foo2().take(4).toList()));Expect.listEquals([null,-1,0,1,2,3,0,1,2,3],await (foo3(4).take(10).toList()));Expect.listEquals([0,1,2,3,4,5,6,7,8,9],await (foo4().take(10).toList()));Expect.isTrue(await (finalized.future));}): cannot handle async/sync*/async* functions
asyncstar_yieldstar_test : Crash # bailout: (test()async{Expect.listEquals([0,1],await (subStream(0).toList()));Completer<bool> finalized=new Completer<bool>();Expect.listEquals(["outer",0,1,"outer",1,2,"outer",2],await (foo(finalized).take(8).toList()));Expect.isTrue(await (finalized.future));finalized=new Completer<bool>();Expect.listEquals(["outer",0,1,"outer",1,2,"outer"],await (foo(finalized).take(7).toList()));Expect.isTrue(await (finalized.future));finalized=new Completer<bool>();Completer<bool> pausedCompleter=new Completer<bool>();Completer<bool> resumedCompleter=new Completer<bool>();Completer<bool> canceledCompleter=new Completer<bool>();StreamController controller;int i=0;addNext(){if(i>=10)return;controller.add(i);i++ ;if(!controller.isPaused){scheduleMicrotask(addNext);}}controller=new StreamController(onListen:(){scheduleMicrotask(addNext);},onPause:(){pausedCompleter.complete(true);},onResume:(){resumedCompleter.complete(true);scheduleMicrotask(addNext);},onCancel:(){canceledCompleter.complete(true);});StreamSubscription subscription;subscription=foo2(controller.stream).listen((event){if(event==2){subscription.pause();scheduleMicrotask((){subscription.resume();});}if(event==5){subscription.cancel();}});Expect.isTrue(await pausedCompleter.future);Expect.isTrue(await resumedCompleter.future);Expect.isTrue(await canceledCompleter.future);}): cannot handle async/sync*/async* functions
await_backwards_compatibility_test/await1 : Crash # bailout: (test1()async{var x=await 9;Expect.equals(9,x);}): cannot handle async/sync*/async* functions
await_backwards_compatibility_test/await2 : Crash # bailout: (test0()async{var x=await 7;Expect.equals(7,x);}): cannot handle async/sync*/async* functions
await_backwards_compatibility_test/await3 : Crash # bailout: (test1()async{var x=await 9;Expect.equals(9,x);}): cannot handle async/sync*/async* functions
await_backwards_compatibility_test/await4 : Crash # bailout: (test1()async{var x=await 9;Expect.equals(9,x);}): cannot handle async/sync*/async* functions
await_backwards_compatibility_test/none : Crash # bailout: (test1()async{var x=await 9;Expect.equals(9,x);}): cannot handle async/sync*/async* functions
await_exceptions_test : Crash # bailout: (awaitFoo()async{await foo();}): cannot handle async/sync*/async* functions
await_for_cancel_test : Crash # bailout: (test()async{await test1();await test2();}): cannot handle async/sync*/async* functions
await_for_test : Crash # bailout: unsupported element kind: t4:field
await_for_use_local_test : Crash # bailout: (test()async{var countStreamController;int i=0;void tick(){if(i<10){countStreamController.add(i);i++ ;scheduleMicrotask(tick);}else{countStreamController.close();}}countStreamController=new StreamController(onListen:(){scheduleMicrotask(tick);});Expect.equals(45,await sumStream(countStreamController.stream));}): cannot handle async/sync*/async* functions
await_future_test : Crash # bailout: (test()async{var result;for(int i=0;i<10;i++ ){result=await foo();Expect.equals(30,result);result=await faa();Expect.equals(3,result);result=await quaz(17);Expect.equals(17,result);result=await quazz();Expect.equals(2,result);result=await nesting();Expect.equals(5,result);result=await awaitIf(3);Expect.equals("p<5",result);result=await awaitIf(5);Expect.equals("p>=5",result);result=await awaitNestedIf(5,3);Expect.equals("q<7",result);result=await awaitNestedIf(5,8);Expect.equals("q>=7",result);result=await awaitNestedIf(3,8);Expect.equals("p!=5",result);result=await awaitReturn();Expect.equals(17,result);result=await awaitSwitch();Expect.equals(3,result);result=await awaitElseIf(6);Expect.equals("p>5",result);result=await awaitElseIf(4);Expect.equals("p<5",result);result=await awaitElseIf(5);Expect.equals("p==5",result);result=await awaitNestedWhile(5,3);Expect.equals(15,result);result=await awaitNestedWhile(4,6);Expect.equals(24,result);result=await awaitAsUnary(bar(1),bar(2));Expect.equals(3,result);result=await awaitFor();Expect.equals(25,result);result=await awaitForIn();Expect.equals('abc',result);}}): cannot handle async/sync*/async* functions
await_nonfuture_test : Crash # bailout: (foo()async{Expect.equals(X,10);return await 5;}): cannot handle async/sync*/async* functions
await_not_started_immediately_test : Crash # bailout: (foo()async{x++ ;await 1;x++ ;}): cannot handle async/sync*/async* functions
await_postfix_expr_test : Crash # bailout: (test()async{Expect.equals(10,await post0(10));Expect.equals(21,await post1(10));Expect.equals(11,await pref0(10));Expect.equals(23,await pref1(10));Expect.equals(10,await sum([1,2,3,4]));Expect.equals(10,await sum2(4));}): cannot handle async/sync*/async* functions
await_regression_test : Crash # bailout: (main()async{testNestedFunctions();testNamedArguments();}): cannot handle async/sync*/async* functions
await_test : Crash # bailout: (others()async{var a="${globalVariable} ${await dummy()} "+await "someString";Expect.equals(a,"1 1 someString");try {var c=new C();var d=c.nooooo()+await dummy();}catch (e){}var cnt=2;var b=[1,2,3];b[cnt]=await dummy();Expect.equals(b[cnt],1);var e=b[0]+await dummy();Expect.equals(e,2);Expect.equals(nonAsyncFunction(),4);}): cannot handle async/sync*/async* functions
bailout4_test : Crash # bailout: unsupported element kind: a:field
bailout5_test : Crash # Instance of 'TypeOperator': type check unimplemented for Map.
bailout6_test : Crash # Instance of 'TypeOperator': type check unimplemented for Map.
bailout7_test : Crash # Instance of 'TypeOperator': type check unimplemented for Map.
bailout_container_type_test : Crash # bailout: unsupported element kind: a:field
bailout_test : Crash # bailout: unsupported element kind: reachedAfoo:field
bool_check_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
call_closurization_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
#call_nonexistent_static_test/01: Crash # (alwaysThrows): handleStaticFunctionGet: function(alwaysThrows)
call_nonexistent_static_test/02 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
call_nonexistent_static_test/03 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
call_nonexistent_static_test/04 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
call_nonexistent_static_test/05 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
call_nonexistent_static_test/06 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
call_nonexistent_static_test/07 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
call_nonexistent_static_test/08 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
call_nonexistent_static_test/09 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
call_nonexistent_static_test/10 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
call_nonexistent_static_test/none : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
call_property_test : Crash # Instance of 'TypeOperator': type check unimplemented for F.
call_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
call_through_null_getter_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
call_type_literal_test/01 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
cascade2_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
cast2_test/01 : Crash # Instance of 'TypeOperator': type casts not implemented.
cast2_test/none : Crash # Instance of 'TypeOperator': type casts not implemented.
cast_test/01 : Crash # Instance of 'TypeOperator': type casts not implemented.
cast_test/02 : Crash # Instance of 'TypeOperator': type casts not implemented.
cast_test/03 : Crash # Instance of 'TypeOperator': type casts not implemented.
cast_test/04 : Crash # Instance of 'TypeOperator': type casts not implemented.
cast_test/05 : Crash # Instance of 'TypeOperator': type casts not implemented.
cast_test/07 : Crash # Instance of 'TypeOperator': type casts not implemented.
cast_test/08 : Crash # Instance of 'TypeOperator': type casts not implemented.
cast_test/10 : Crash # Instance of 'TypeOperator': type casts not implemented.
cast_test/12 : Crash # Instance of 'TypeOperator': type casts not implemented.
cast_test/13 : Crash # Instance of 'TypeOperator': type casts not implemented.
cast_test/14 : Crash # Instance of 'TypeOperator': type casts not implemented.
cast_test/15 : Crash # Instance of 'TypeOperator': type casts not implemented.
cast_test/none : Crash # Instance of 'TypeOperator': type casts not implemented.
cha_deopt1_test : Crash # bailout: (d.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
cha_deopt2_test : Crash # bailout: (d.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
cha_deopt3_test : Crash # bailout: (d.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
checked_null_test/01 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
checked_setter2_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
checked_setter3_test/01 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
checked_setter3_test/02 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
checked_setter3_test/none : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
checked_setter_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
class_literal_test/01 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
class_literal_test/02 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
class_literal_test/03 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
class_literal_test/04 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
class_literal_test/05 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
class_literal_test/06 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
class_literal_test/07 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
class_literal_test/08 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
class_literal_test/09 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
class_literal_test/10 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
class_literal_test/11 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
class_literal_test/12 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
class_literal_test/13 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
class_literal_test/14 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
class_literal_test/15 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
class_literal_test/16 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
class_literal_test/17 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
class_literal_test/18 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
class_literal_test/19 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
class_literal_test/20 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
class_literal_test/21 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
class_literal_test/22 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
class_literal_test/23 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
class_literal_test/24 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
class_literal_test/25 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
class_override_test/00 : Crash # bailout: (try {instance.foo();}on NoSuchMethodError catch (error){}finally {}): try/finally
class_override_test/none : Crash # bailout: (try {instance.foo();}finally {}): try/finally
closure3_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
closure_in_constructor_test : Crash # Instance of 'TypeOperator': type check unimplemented for List.
closure_internals_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
closure_self_reference_test : Crash # bailout: (try {return inner(value-1);}finally {counter++ ;}): try/finally
closure_side_effect_test : Crash # bailout: unsupported element kind: c:field
closure_type_variables_test : Crash # Instance of 'TypeOperator': type check unimplemented for A<int>.
closures_initializer2_test : Crash # Assertion failure: Unknown variable: Instance of 'TypeVariableLocal'.
closures_initializer_test : Crash # Instance of 'TypeOperator': type check unimplemented for List<int>.
compile_time_constant_a_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
compile_time_constant_b_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
const_evaluation_test/01 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
const_evaluation_test/none : RuntimeError
const_nested_test : Crash # Assertion failure: Unknown variable: variable(getClosure#MIN).
const_objects_are_immutable_test/01 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
const_objects_are_immutable_test/none : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
const_switch2_test/none : Crash # bailout: (switch (a){case 1:print("OK");}): Unhandled node
const_switch_test/01 : Crash # bailout: (switch (c){case const C(0.0):return '0.0';case const C(0):return '0';case const C(1.0):return '1.0';case const C(1):return '1';}): Unhandled node
const_switch_test/02 : Crash # bailout: (switch (c){case const C(0.0):return '0.0';case const C(0):return '0';case const C(1.0):return '1.0';case const C(1):return '1';}): Unhandled node
const_switch_test/03 : Crash # bailout: (switch (c){case const C(0.0):return '0.0';case const C(0):return '0';case const C(1.0):return '1.0';case const C(1):return '1';}): Unhandled node
const_switch_test/04 : Crash # bailout: (switch (c){case const C(0.0):return '0.0';case const C(0):return '0';case const C(1.0):return '1.0';case const C(1):return '1';}): Unhandled node
constant_propagation_phis_test : RuntimeError
constructor10_test/01 : Crash # Internal Error: No default constructor available.
constructor10_test/02 : Crash # Internal Error: No default constructor available.
constructor11_test : Crash # Assertion failure: Unknown variable: initializing_formal(#x).
constructor12_test : Crash # Instance of 'TypeOperator': type check unimplemented for A<int>.
constructor3_negative_test : Crash # RangeError: index (0) must be in the range [0..0)
constructor5_test : Crash # The null object does not have a getter 'namedArguments'.
constructor_call_wrong_argument_count_negative_test : Crash # RangeError: index (0) must be in the range [0..0)
constructor_initializer_test/01 : Crash # Assertion failure: function(throwRuntimeError) has not been resolved.
constructor_with_mixin_test : Crash # Internal Error: No default constructor available.
continue_test : Crash # bailout: (switch (0){case 0:i=22;continue;default:i=25;break;}): Unhandled node
core_type_check_test : Crash # Instance of 'TypeOperator': type check unimplemented for Comparable.
crash_12118_test : Crash # Assertion failure: Unknown variable: initializing_formal(#x).
crash_6725_test/01 : Crash # t: Failed assertion: line 534 pos 14: 'catchClause.exception != null' is not true.
custom_await_stack_trace_test : Crash # bailout: (main()async{try {var x=await foo();Expect.fail("Should not reach here.");}on int catch (e,s){Expect.equals(42,e);Expect.equals("Blah \nBloop\nBleep\n",s.toString());return;}Expect.fail("Unreachable.");}): cannot handle async/sync*/async* functions
cyclic_type2_test : Crash # Instance of 'TypeOperator': type check unimplemented for Derived1<Derived1, Derived2>.
cyclic_type_test/00 : RuntimeError
cyclic_type_test/01 : RuntimeError
cyclic_type_test/02 : RuntimeError
cyclic_type_test/03 : RuntimeError
cyclic_type_test/04 : RuntimeError
deferred_call_empty_before_load_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
deferred_closurize_load_library_test : RuntimeError
deferred_constant_list_test : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_constraints_constants_test/constructor1 : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_constraints_constants_test/constructor2 : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_constraints_constants_test/default_argument1 : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_constraints_constants_test/default_argument2 : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_constraints_constants_test/metadata1 : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_constraints_constants_test/metadata2 : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_constraints_constants_test/metadata3 : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_constraints_constants_test/none : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_constraints_constants_test/reference1 : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_constraints_constants_test/reference2 : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_constraints_constants_test/reference_after_load : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_constraints_type_annotation_test/as_operation : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_constraints_type_annotation_test/catch_check : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_constraints_type_annotation_test/is_check : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_constraints_type_annotation_test/new : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_constraints_type_annotation_test/new_before_load : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_constraints_type_annotation_test/new_generic1 : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_constraints_type_annotation_test/new_generic2 : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_constraints_type_annotation_test/new_generic3 : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_constraints_type_annotation_test/none : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_constraints_type_annotation_test/static_method : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_constraints_type_annotation_test/type_annotation1 : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_constraints_type_annotation_test/type_annotation_generic1 : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_constraints_type_annotation_test/type_annotation_generic2 : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_constraints_type_annotation_test/type_annotation_generic3 : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_constraints_type_annotation_test/type_annotation_generic4 : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_constraints_type_annotation_test/type_annotation_non_deferred : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_constraints_type_annotation_test/type_annotation_null : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_constraints_type_annotation_test/type_annotation_top_level : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_function_type_test : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_global_test : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_inheritance_constraints_test/redirecting_constructor : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
deferred_inlined_test : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_load_constants_test/01 : Crash # bailout: (foo.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_load_constants_test/02 : Crash # bailout: (foo.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_load_constants_test/03 : Crash # bailout: (foo.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_load_constants_test/04 : Crash # bailout: (foo.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_load_constants_test/05 : Crash # bailout: (foo.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_load_constants_test/none : Crash # bailout: (foo.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_load_inval_code_test : Crash # bailout: (d.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_load_library_wrong_args_test/01 : Crash # bailout: (lib.loadLibrary(10)): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_load_library_wrong_args_test/none : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_mixin_test : Crash # bailout: (lib1.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_no_such_method_test : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_not_loaded_check_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
deferred_only_constant_test : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_optimized_test : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_redirecting_factory_test : Crash # bailout: (test()async{await test1();await test2();await test3();}): cannot handle async/sync*/async* functions
deferred_regression_22995_test : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_shadow_load_library_test : Crash # bailout: (lib.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_shared_and_unshared_classes_test : Crash # bailout: (lib1.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deferred_static_seperate_test : Crash # bailout: (lib1.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
deopt_inlined_function_lazy_test : Crash # bailout: (try {return x+12342353257893275483274832;}finally {}): try/finally
deopt_inlined_function_test : Crash # bailout: unsupported element kind: obj:field
div_with_power_of_two2_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
div_with_power_of_two_test : Crash # bailout: unsupported element kind: expectedResults:field
double_to_string_as_exponential2_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
double_to_string_as_fixed2_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
double_to_string_as_precision2_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
dynamic_prefix_core_test/01 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
dynamic_test : Crash # Instance of 'TypeOperator': type check unimplemented for Iface<dynamic, num>.
empty_block_case_test : Crash # bailout: (switch (1){case 1:{}case 2:Expect.equals(true,false);}): Unhandled node
enum_mirror_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
enum_private_test/02 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
enum_test : Crash # bailout: (switch (e){case Enum5.H:index=2;break;case Enum5.F:index=0;break;case Enum5.G:index=1;break;}): Unhandled node
equality_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
error_stacktrace_test : RuntimeError
evaluation_redirecting_constructor_test : RuntimeError
execute_finally10_test : Crash # bailout: (try {throw 'foo';}catch (exception){runCompiler.toString();runCompiler.toString();rethrow;}finally {totalCompileTime.stop();}): try/finally
execute_finally11_test : Crash # bailout: (try {throw 'foo';}catch (exception){try {runCompiler.toString();runCompiler.toString();}catch (exception){}rethrow;}finally {totalCompileTime.stop();}): try/finally
execute_finally12_test : Crash # bailout: (try {try {}finally {a=8;break;}}finally {return a==8;}): try/finally
execute_finally1_test : Crash # bailout: (try {int j;j=func();i=1;return i;}finally {i=i+800;}): try/finally
execute_finally2_test : Crash # bailout: (try {int j;j=func();try {i=1;return i;}finally {i=i+400;}i=2;return i;}finally {i=i+800;}): try/finally
execute_finally3_test : Crash # bailout: (try {try {int j;j=func();L1:while(i<=0){if(i==0){try {i=1;func();try {int j;j=func();while(j<50){j+= func();if(j>30){continue L1;}}i=200000;}finally {i=i+200;}}finally {i=i+400;}}}}finally {i=i+800;}return i;}finally {i=i+1600;}): try/finally
execute_finally4_test : Crash # bailout: (try {int j;j=func();i=1;}finally {i=i+10;}): try/finally
execute_finally5_test : Crash # bailout: (try {int j;j=func();try {i=1;return i;}finally {i=i+400;}i=2;return i;}finally {i=i+800;}): try/finally
execute_finally6_test : Crash # bailout: (try {try {int j;j=func();L1:while(i<=0){if(i==0){try {i=1;func();try {int j;j=func();L1:while(j<50){j+= func();if(j>30){break L1;}}i+= 200000;}finally {i=i+200;}}finally {i=i+400;}}}}finally {i=i+800;}return i;}finally {i=i+1600;}): try/finally
execute_finally7_test : Crash # bailout: (try {var a=new List(10);int i=0;while(i<10){int j=i;a[i]=(){if(j==5){throw new MyException("Test for exception being thrown");}k+= 10;return j;};if(i==0){b=a[i];}i++ ;}for(int i=0;i<10;i++ ){a[i]();}}on MyException catch (exception){k+= 100;print(exception.message_);b();}finally {k+= 1000;b();}): try/finally
execute_finally8_test : Crash # bailout: (try {sum+= 1;return 'hi';}finally {sum+= 1;throw 'ball';sum+= 1;}): try/finally
execute_finally9_test : Crash # bailout: (try {sum+= 1;return 'hi';}catch (e){sum+= 1;throw 'ball';sum+= 1;}finally {sum+= 1;throw 'ball';sum+= 1;}): try/finally
f_bounded_equality_test : RuntimeError
factory3_test : Crash # Instance of 'TypeOperator': type check unimplemented for T.
factory_redirection3_cyclic_test/01 : Crash # Assertion failure: function(throwNoSuchMethod) has not been resolved.
factory_redirection_test/01 : Crash # Instance of 'TypeOperator': type check unimplemented for A<List>.
factory_redirection_test/02 : Crash # Instance of 'TypeOperator': type check unimplemented for A<List>.
factory_redirection_test/03 : Crash # Instance of 'TypeOperator': type check unimplemented for A<List>.
factory_redirection_test/04 : Crash # Assertion failure: function(throwNoSuchMethod) has not been resolved.
factory_redirection_test/05 : Crash # Instance of 'TypeOperator': type check unimplemented for A<List>.
factory_redirection_test/06 : Crash # Instance of 'TypeOperator': type check unimplemented for A<List>.
factory_redirection_test/07 : Crash # Instance of 'TypeOperator': type check unimplemented for A<List>.
factory_redirection_test/08 : Crash # Instance of 'TypeOperator': type check unimplemented for A<List>.
factory_redirection_test/09 : Crash # Instance of 'TypeOperator': type check unimplemented for A<List>.
factory_redirection_test/10 : Crash # Instance of 'TypeOperator': type check unimplemented for A<List>.
factory_redirection_test/11 : Crash # Instance of 'TypeOperator': type check unimplemented for A<List>.
factory_redirection_test/12 : Crash # Instance of 'TypeOperator': type check unimplemented for A<List>.
factory_redirection_test/13 : Crash # Instance of 'TypeOperator': type check unimplemented for A<List>.
factory_redirection_test/14 : Crash # Instance of 'TypeOperator': type check unimplemented for A<List>.
factory_redirection_test/none : Crash # Instance of 'TypeOperator': type check unimplemented for A<List>.
factory_return_type_checked_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
factory_type_parameter2_test : Crash # t: Failed assertion: line 2530 pos 12: 'state.thisParameter != null' is not true.
factory_type_parameter_test : Crash # Instance of 'TypeOperator': type check unimplemented for A<List>.
fast_method_extraction_test : Crash # Instance of 'TypeOperator': type check unimplemented for T.
field_inference_test : Crash # bailout: unsupported element kind: array:field
final_is_not_const_test/none : RuntimeError
final_syntax_test/03 : Crash # bailout: unsupported element kind: P3:field
final_syntax_test/04 : Crash # bailout: unsupported element kind: P3:field
final_syntax_test/08 : Crash # bailout: unsupported element kind: A3:field
final_syntax_test/09 : Crash # bailout: unsupported element kind: P3:field
final_syntax_test/10 : Crash # bailout: unsupported element kind: B3:field
final_syntax_test/none : Crash # bailout: unsupported element kind: P3:field
finally_test : Crash # bailout: (try {i=12;}finally {Expect.equals(12,i);executedFinally=true;}): try/finally
first_class_types_literals_test/03 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
first_class_types_literals_test/04 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
first_class_types_literals_test/05 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
first_class_types_literals_test/06 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
first_class_types_literals_test/07 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
first_class_types_literals_test/08 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
first_class_types_literals_test/09 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
first_class_types_literals_test/10 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
first_class_types_literals_test/11 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
first_class_types_literals_test/12 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
fixed_type_variable2_test/01 : Crash # Instance of 'TypeOperator': type check unimplemented for T.
fixed_type_variable2_test/02 : Crash # Instance of 'TypeOperator': type check unimplemented for T.
fixed_type_variable2_test/03 : Crash # Instance of 'TypeOperator': type check unimplemented for T.
fixed_type_variable2_test/04 : Crash # Instance of 'TypeOperator': type check unimplemented for T.
fixed_type_variable2_test/05 : Crash # Instance of 'TypeOperator': type check unimplemented for T.
fixed_type_variable2_test/06 : Crash # Instance of 'TypeOperator': type check unimplemented for T.
fixed_type_variable_test/02 : RuntimeError
fixed_type_variable_test/04 : RuntimeError
fixed_type_variable_test/06 : RuntimeError
flatten_test/01 : Crash # bailout: (test()async{int x=await new Derived<int>();}): cannot handle async/sync*/async* functions
flatten_test/02 : Crash # bailout: (test()async{Future<int> f()async=>new Derived<int>();}): cannot handle async/sync*/async* functions
flatten_test/03 : Crash # bailout: (test()async{Future<int> f()async{return new Derived<int>();}}): cannot handle async/sync*/async* functions
flatten_test/04 : Crash # bailout: (test()async{Future<int> x=(()async=>new Derived<int>())();}): cannot handle async/sync*/async* functions
flatten_test/05 : Crash # bailout: (test()async{FixedPoint<int> x=await new FixedPoint<int>();}): cannot handle async/sync*/async* functions
flatten_test/06 : Crash # bailout: (test()async{Future<FixedPoint<int>> f()async=>new FixedPoint<int>();}): cannot handle async/sync*/async* functions
flatten_test/07 : Crash # bailout: (test()async{Future<FixedPoint<int>> f()async{return new FixedPoint<int>();}}): cannot handle async/sync*/async* functions
flatten_test/08 : Crash # bailout: (test()async{Future<FixedPoint<int>> x=(()async=>new FixedPoint<int>())();}): cannot handle async/sync*/async* functions
flatten_test/09 : Crash # bailout: (test()async{Divergent<Divergent<int>> x=await new Divergent<int>();}): cannot handle async/sync*/async* functions
flatten_test/10 : Crash # bailout: (test()async{Future<Divergent<Divergent<int>>> f()async=>new Divergent<int>();}): cannot handle async/sync*/async* functions
flatten_test/11 : Crash # bailout: (test()async{Future<Divergent<Divergent<int>>> f()async{return new Divergent<int>();}}): cannot handle async/sync*/async* functions
flatten_test/12 : Crash # bailout: (test()async{Future<Divergent<Divergent<int>>> x=(()async=>new Divergent<int>())();}): cannot handle async/sync*/async* functions
flatten_test/none : Crash # bailout: (test()async{}): cannot handle async/sync*/async* functions
for2_test : Crash # The null object does not have a getter 'field'.
for_in2_test : Crash # bailout: unsupported element kind: set:field
for_in_side_effects_test : Crash # bailout: unsupported element kind: array:field
for_variable_capture_test : Crash # bailout: (i=0): For-loop variable captured in loop header
forwarding_factory_constructor_default_values_test : RuntimeError
function_propagation_test : Crash # Instance of 'TypeOperator': type check unimplemented for F.
function_subtype0_test : Crash # Instance of 'TypeOperator': type check unimplemented for t__.
function_subtype1_test : Crash # unimplemented translation of type expression int_
function_subtype2_test : Crash # Instance of 'TypeOperator': type check unimplemented for T1.
function_subtype_bound_closure0_test : Crash # Instance of 'TypeOperator': type check unimplemented for Foo.
function_subtype_bound_closure1_test : Crash # Instance of 'TypeOperator': type check unimplemented for Foo<bool>.
function_subtype_bound_closure2_test : Crash # Instance of 'TypeOperator': type check unimplemented for Foo<T>.
function_subtype_bound_closure3_test : Crash # Instance of 'TypeOperator': type check unimplemented for Foo.
function_subtype_bound_closure4_test : Crash # Instance of 'TypeOperator': type check unimplemented for Foo.
function_subtype_bound_closure5_test : Crash # Instance of 'TypeOperator': type check unimplemented for Foo<T>.
function_subtype_bound_closure5a_test : Crash # Instance of 'TypeOperator': type check unimplemented for Foo<T>.
function_subtype_bound_closure6_test : Crash # Instance of 'TypeOperator': type check unimplemented for Foo<T>.
function_subtype_bound_closure7_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
function_subtype_call0_test : Crash # Instance of 'TypeOperator': type check unimplemented for Foo.
function_subtype_call1_test : Crash # Instance of 'TypeOperator': type check unimplemented for Foo.
function_subtype_call2_test : Crash # Instance of 'TypeOperator': type check unimplemented for Foo.
function_subtype_cast0_test : Crash # Instance of 'TypeOperator': type casts not implemented.
function_subtype_cast1_test : Crash # Instance of 'TypeOperator': type casts not implemented.
function_subtype_cast2_test : Crash # Instance of 'TypeOperator': type casts not implemented.
function_subtype_cast3_test : Crash # Instance of 'TypeOperator': type casts not implemented.
function_subtype_checked0_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
function_subtype_closure0_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
function_subtype_closure1_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
function_subtype_factory0_test : Crash # Instance of 'TypeOperator': type check unimplemented for Foo<T>.
function_subtype_inline0_test : Crash # Instance of 'TypeOperator': type check unimplemented for Foo.
function_subtype_local0_test : Crash # Instance of 'TypeOperator': type check unimplemented for Foo.
function_subtype_local1_test : Crash # Instance of 'TypeOperator': type check unimplemented for Foo<bool>.
function_subtype_local2_test : Crash # Instance of 'TypeOperator': type check unimplemented for Foo<T>.
function_subtype_local3_test : Crash # Instance of 'TypeOperator': type check unimplemented for Foo.
function_subtype_local4_test : Crash # Instance of 'TypeOperator': type check unimplemented for Foo.
function_subtype_local5_test : Crash # Instance of 'TypeOperator': type check unimplemented for Foo<T>.
function_subtype_named1_test : Crash # Instance of 'TypeOperator': type check unimplemented for t_void_.
function_subtype_named2_test : Crash # unimplemented translation of type expression void___a_int
function_subtype_not0_test : Crash # Instance of 'TypeOperator': type check unimplemented for Foo.
function_subtype_not1_test : Crash # Instance of 'TypeOperator': type check unimplemented for Foo.
function_subtype_not2_test : Crash # Instance of 'TypeOperator': type check unimplemented for Foo<T>.
function_subtype_not3_test : Crash # Instance of 'TypeOperator': type check unimplemented for Foo<T>.
function_subtype_optional1_test : Crash # Instance of 'TypeOperator': type check unimplemented for t_void_.
function_subtype_optional2_test : Crash # unimplemented translation of type expression void___int
function_subtype_setter0_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
function_subtype_simple0_test : Crash # Instance of 'TypeOperator': type check unimplemented for Args0.
function_subtype_simple1_test : Crash # Instance of 'TypeOperator': type check unimplemented for Args0.
function_subtype_simple2_test : Crash # Instance of 'TypeOperator': type check unimplemented for Args0.
function_subtype_top_level0_test : Crash # Instance of 'TypeOperator': type check unimplemented for Foo.
function_subtype_top_level1_test : Crash # Instance of 'TypeOperator': type check unimplemented for Foo<T>.
function_subtype_typearg0_test : Crash # unimplemented translation of type expression Foo
function_subtype_typearg1_test : Crash # unimplemented translation of type expression f2
function_subtype_typearg2_test : Crash # unimplemented translation of type expression f1
function_subtype_typearg3_test : Crash # unimplemented translation of type expression f1
function_subtype_typearg4_test : Crash # unimplemented translation of type expression f1
function_type3_test : Crash # Instance of 'TypeOperator': type check unimplemented for F.
function_type_alias2_test : Crash # Instance of 'TypeOperator': type check unimplemented for f1.
function_type_alias3_test : Crash # Instance of 'TypeOperator': type check unimplemented for F.
function_type_alias4_test : Crash # Instance of 'TypeOperator': type check unimplemented for F.
function_type_alias6_test/none : Crash # Instance of 'TypeOperator': type check unimplemented for F.
function_type_alias8_test : Crash # bailout: unsupported element kind: fromThing:field
function_type_alias_test : Crash # Instance of 'TypeOperator': type check unimplemented for Fun.
function_type_call_getter_test : Crash # Instance of 'TypeOperator': type check unimplemented for F.
generic2_test : Crash # Instance of 'TypeOperator': type check unimplemented for T.
generic_closure_test : Crash # Instance of 'TypeOperator': type check unimplemented for F.
generic_constructor_mixin2_test : Crash # Internal Error: No default constructor available.
generic_constructor_mixin3_test : Crash # Internal Error: No default constructor available.
generic_constructor_mixin_test : Crash # Internal Error: No default constructor available.
generic_creation_test : RuntimeError
generic_deep_test : Crash # Instance of 'TypeOperator': type check unimplemented for S<Z>.
generic_field_mixin2_test : Crash # unable to find constructor parameter for type variable T.
generic_field_mixin3_test : Crash # Instance of 'TypeOperator': type check unimplemented for A<T>.
generic_field_mixin_test : Crash # Instance of 'TypeOperator': type check unimplemented for A<int>.
generic_inheritance_test : Crash # Instance of 'TypeOperator': type check unimplemented for A<Object>.
generic_instanceof2_test : Crash # Instance of 'TypeOperator': type check unimplemented for Foo<int, num>.
generic_instanceof3_test : Crash # Instance of 'TypeOperator': type check unimplemented for I<String>.
generic_instanceof4_test : Crash # Instance of 'TypeOperator': type check unimplemented for T.
generic_instanceof5_test : Crash # Instance of 'TypeOperator': type check unimplemented for T.
generic_instanceof_test : Crash # Instance of 'TypeOperator': type check unimplemented for List<T>.
generic_is_check_test : Crash # Instance of 'TypeOperator': type check unimplemented for A<int>.
generic_list_checked_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
generic_native_test : Crash # Instance of 'TypeOperator': type check unimplemented for T.
generic_object_type_test : Crash # Instance of 'TypeOperator': type check unimplemented for T.
generic_parameterized_extends_test : Crash # Instance of 'TypeOperator': type check unimplemented for A<Object>.
generic_test : Crash # Instance of 'TypeOperator': type check unimplemented for B<AA>.
implicit_super_constructor_call_test : Crash # Assertion failure: Unknown variable: initializing_formal(#x).
import_self_test/01 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
inference_captured_variable2_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
inference_captured_variable_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
inference_list_or_null_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
inference_mixin_field_test : Crash # Internal Error: No default constructor available.
inference_super_constructor_call_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
inferrer_closure_test : Crash # bailout: unsupported element kind: closure:field
inferrer_constructor2_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
inferrer_constructor3_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
inferrer_constructor4_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
inferrer_constructor5_test/01 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
inferrer_constructor_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
inferrer_synthesized_constructor_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
inferrer_synthesized_super_constructor_test : Crash # Assertion failure: Unknown variable: parameter(#a).
inferrer_this_access_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
infinite_switch_label_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
inline_super_test : Crash # The null object does not have a getter 'callStructure'.
inlined_throw_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
instance_creation_in_function_annotation_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
instanceof2_test : Crash # Instance of 'TypeOperator': type check unimplemented for List.
instanceof3_test : Crash # Instance of 'TypeOperator': type check unimplemented for UndeclaredType.
instanceof4_test/01 : Crash # Instance of 'TypeOperator': type check unimplemented for List<T>.
instanceof4_test/none : Crash # Instance of 'TypeOperator': type check unimplemented for List<T>.
instanceof_test : Crash # Instance of 'TypeOperator': type check unimplemented for List.
integer_division_by_zero_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
interceptor6_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
interceptor7_test : Crash # bailout: unsupported element kind: array:field
interceptor8_test : Crash # bailout: unsupported element kind: a:field
interceptor9_test : RuntimeError
interceptor_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
internal_library_test/01 : Crash # bailout: (JS('int','0')): handleStaticFunctionInvoke: foreign: function(JS)
invocation_mirror_invoke_on2_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
invocation_mirror_invoke_on_test : RuntimeError
invocation_mirror_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
is_malformed_type_test/94 : Crash # Instance of 'TypeOperator': type casts not implemented.
is_malformed_type_test/95 : Crash # Instance of 'TypeOperator': type check unimplemented for Undefined.
is_malformed_type_test/96 : Crash # Instance of 'TypeOperator': type casts not implemented.
is_malformed_type_test/97 : Crash # Instance of 'TypeOperator': type check unimplemented for Undefined.
is_malformed_type_test/98 : Crash # Instance of 'TypeOperator': type casts not implemented.
is_malformed_type_test/99 : Crash # Instance of 'TypeOperator': type check unimplemented for Undefined.
is_nan_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
is_not_class2_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
is_object_test : RuntimeError
isnot_malformed_type_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
issue10581_test : Crash # bailout: (switch (type){case 100:a=new Point2DObject();break;case 200:a=new BestFitObject();break;}): Unhandled node
issue10721_test : Crash # Instance of 'TypeOperator': type check unimplemented for Map.
issue10747_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
issue10783_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
issue11724_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
issue11793_test : Crash # bailout: unsupported element kind: otherArray:field
issue12023_test : Crash # bailout: (switch (action){case "f":case "s":action=test[i-1];int value=int.parse(test[i++ ]);if(action=="f"){Expect.equals(5,value);}else{Expect.equals(6,value);}break;}): Unhandled node
issue12284_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
issue12336_test : Crash # Instance of 'TypeOperator': type check unimplemented for List.
issue13474_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
issue13673_test : Crash # bailout: unsupported element kind: topLevel:field
issue14014_3_test : Crash # Assertion failure: Unknown variable: Instance of 'TypeVariableLocal'.
issue20476_test : Crash # bailout: (try {try {return 1;}catch (e1){}finally {return 3;}}catch (e2){}finally {return 5;}): try/finally
issue7525_test : Crash # Instance of 'TypeOperator': type casts not implemented.
issue9687_test : Crash # bailout: unsupported element kind: array:field
issue9939_test : Crash # t: Failed assertion: line 85 pos 12: 'irVariable.host == currentElement' is not true.
issue9949_test : Crash # Instance of 'TypeOperator': type check unimplemented for Expando.
issue_1751477_test : Crash # bailout: (lib1.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
label_test : Crash # bailout: (switch (i){case 111:while(doAgain()){break L;}default:i-- ;}): Unhandled node
large_class_declaration_test : Crash # Stack Overflow
large_implicit_getter_test : Crash # bailout: unsupported element kind: panels:field
lazy_map_test : Crash # bailout: unsupported element kind: data:field
lazy_static2_test : Crash # bailout: unsupported element kind: x:field
lazy_static3_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
lazy_static4_test : Crash # bailout: unsupported element kind: v:field
lazy_static5_test : Crash # bailout: unsupported element kind: x:field
lazy_static6_test : Crash # bailout: unsupported element kind: x:field
lazy_static_test : Crash # bailout: unsupported element kind: t2:field
library_ambiguous_test/04 : Crash # Instance of 'TypeOperator': type check unimplemented for bax.
licm2_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
licm3_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
list_double_index_in_loop2_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
list_double_index_in_loop_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
list_is_test : Crash # Instance of 'TypeOperator': type check unimplemented for List.
list_length_tracer_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
list_literal3_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
list_test : Crash # Instance of 'TypeOperator': type check unimplemented for List<A>.
list_tracer_in_map_test : Crash # bailout: unsupported element kind: b:field
list_tracer_return_from_tearoff_closure_test : Crash # bailout: unsupported element kind: a:field
logical_expression_test : Crash # bailout: unsupported element kind: globalList:field
malbounded_type_cast2_test : Crash # Instance of 'TypeOperator': type casts not implemented.
malbounded_type_cast_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
malbounded_type_test2_test : Crash # Instance of 'TypeOperator': type check unimplemented for A<T>.
malbounded_type_test_test/01 : Crash # Instance of 'TypeOperator': type check unimplemented for Super<int>.
malbounded_type_test_test/04 : Crash # Instance of 'TypeOperator': type check unimplemented for Super<String>.
malformed2_test/00 : Crash # Instance of 'TypeOperator': type check unimplemented for List<Unresolved>.
malformed_inheritance_test/02 : Crash # Instance of 'TypeOperator': type check unimplemented for A<String>.
malformed_inheritance_test/03 : Crash # The null object does not have a getter 'isMixinApplication'.
malformed_inheritance_test/04 : Crash # Instance of 'TypeOperator': type check unimplemented for A<String>.
malformed_inheritance_test/06 : Crash # Instance of 'TypeOperator': type check unimplemented for A<String>.
malformed_inheritance_test/09 : Crash # The null object does not have a getter 'isMixinApplication'.
malformed_inheritance_test/10 : Crash # The null object does not have a getter 'isMixinApplication'.
malformed_test/06 : Crash # unimplemented translation of type expression Unresolved
malformed_test/none : Crash # unimplemented translation of type expression Unresolved
malformed_type_test : Crash # bailout: unsupported element kind: x:field
many_generic_instanceof_test : Crash # Instance of 'TypeOperator': type check unimplemented for List<T>.
many_overridden_no_such_method_test : RuntimeError
megamorphic_no_such_method_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
method_override4_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
method_override5_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
method_override_test : Crash # Instance of 'TypeOperator': type check unimplemented for RemoveFunctionType<String, String>.
methods_as_constants_test : RuntimeError
minify_closure_variable_collision_test : Crash # bailout: unsupported element kind: array:field
mint_arithmetic_test : Crash # bailout: (try {f(a,b){var s=b;var t=a|s;return t;}var x=0xffffffff;for(var i=0;i<20;i++ )f(x,x);Expect.equals(x,f(x,x));Expect.equals(-1,f(x,-1));var y=0xffffffffffffffff;Expect.equals(-1,f(y,-1));}finally {}): try/finally
mixin_bound_test : Crash # Internal Error: No default constructor available.
mixin_cyclic_test/01 : Crash # The null object does not have a getter 'isMixinApplication'.
mixin_extends_field_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
mixin_extends_method_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
mixin_field_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
mixin_forwarding_constructor1_test : Crash # Internal Error: No default constructor available.
mixin_forwarding_constructor3_test : Crash # Internal Error: No default constructor available.
mixin_generic_test : Crash # Instance of 'TypeOperator': type check unimplemented for S<Map<int, bool>>.
mixin_illegal_constructor_test/13 : MissingRuntimeError
mixin_illegal_constructor_test/15 : MissingRuntimeError
mixin_illegal_cycles_test/02 : Crash # The null object does not have a getter 'isMixinApplication'.
mixin_illegal_cycles_test/03 : Crash # The null object does not have a getter 'isMixinApplication'.
mixin_illegal_cycles_test/04 : Crash # The null object does not have a getter 'isMixinApplication'.
mixin_illegal_cycles_test/06 : Crash # The null object does not have a getter 'isMixinApplication'.
mixin_illegal_static_access_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
mixin_invalid_inheritance1_test/01 : Crash # The null object does not have a getter 'isMixinApplication'.
mixin_invalid_inheritance1_test/02 : Crash # The null object does not have a getter 'isMixinApplication'.
mixin_invalid_inheritance1_test/03 : Crash # The null object does not have a getter 'isMixinApplication'.
mixin_issue10216_2_test : Crash # Instance of 'TypeOperator': type casts not implemented.
mixin_issue10216_test : Crash # Instance of 'TypeOperator': type casts not implemented.
mixin_lib_extends_field_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
mixin_lib_extends_method_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
mixin_method_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
mixin_mixin4_test : Crash # Instance of 'TypeOperator': type check unimplemented for I<List<bool>>.
mixin_mixin5_test : Crash # Instance of 'TypeOperator': type check unimplemented for K<int>.
mixin_mixin6_test : Crash # Instance of 'TypeOperator': type check unimplemented for K<int>.
mixin_mixin7_test : Crash # Instance of 'TypeOperator': type check unimplemented for K<int>.
mixin_mixin_bound2_test : Crash # Instance of 'TypeOperator': type check unimplemented for K<int>.
mixin_mixin_bound_test : Crash # Instance of 'TypeOperator': type check unimplemented for I<List<bool>>.
mixin_only_for_rti_test : Crash # Instance of 'TypeOperator': type check unimplemented for T.
mixin_super_constructor2_test : Crash # Internal Error: No default constructor available.
mixin_super_constructor_default_test : Crash # Internal Error: No default constructor available.
mixin_super_constructor_multiple_test : Crash # Internal Error: No default constructor available.
mixin_super_constructor_named_test/01 : Crash # Internal Error: No default constructor available.
mixin_super_constructor_named_test/none : Crash # Internal Error: No default constructor available.
mixin_super_constructor_positionals_test/01 : Crash # Internal Error: No default constructor available.
mixin_super_constructor_positionals_test/none : Crash # Internal Error: No default constructor available.
mixin_super_constructor_test : Crash # Internal Error: No default constructor available.
mixin_type_parameter1_test : Crash # Instance of 'TypeOperator': type check unimplemented for Mixin1<num>.
mixin_type_parameter2_test : Crash # Instance of 'TypeOperator': type check unimplemented for Mixin1<num>.
mixin_type_parameter3_test : Crash # Instance of 'TypeOperator': type check unimplemented for Mixin1<num>.
mixin_type_parameter4_test : Crash # Instance of 'TypeOperator': type check unimplemented for R<bool, int>.
mixin_type_parameters_mixin_extends_test : Crash # Instance of 'TypeOperator': type check unimplemented for M.
mixin_type_parameters_mixin_test : Crash # Instance of 'TypeOperator': type check unimplemented for M.
mixin_type_parameters_super_extends_test : Crash # Instance of 'TypeOperator': type check unimplemented for S.
mixin_type_parameters_super_test : Crash # Instance of 'TypeOperator': type check unimplemented for S.
mixin_typedef_constructor_test : Crash # Internal Error: No default constructor available.
mixin_with_two_implicit_constructors_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
modulo_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
multiple_field_assignment_constructor_test : Crash # bailout: unsupported element kind: a:field
named_parameter_clash_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
named_parameters_aggregated_test/05 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
named_parameters_with_dollars_test : Crash # Instance of 'TypeOperator': type check unimplemented for List.
namer2_test : Crash # Instance of 'TypeOperator': type check unimplemented for A.
naming_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
nested_switch_label_test : Crash # bailout: (switch (target){outer0:case 0:list.add('0');continue outer2;outer1:case 1:list.add('1');continue outerDefault;outer2:case 2:switch (target){inner0:case 0:list.add('2:0');continue outer1;inner2:case 2:list.add('2:2');continue inner1;inner1:case 1:list.add('2:1');}list.add('2');continue outer1;outerDefault:default:list.add('default');}): Unhandled node
no_such_constructor2_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
no_such_constructor_test/01 : MissingRuntimeError
no_such_method_dispatcher_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
no_such_method_empty_selector_test : Crash # bailout: unsupported element kind: b:field
no_such_method_test : RuntimeError
non_const_super_negative_test : Crash # RangeError: index (0) must be in the range [0..0)
not_enough_positional_arguments_test/00 : MissingRuntimeError
not_enough_positional_arguments_test/03 : Crash # RangeError: index (1) must be in the range [0..1)
null2_test : Crash # Instance of 'TypeOperator': type check unimplemented for dynamic.
null_inline_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
null_is2_test : Crash # Instance of 'TypeOperator': type check unimplemented for T.
null_is_test : Crash # Instance of 'TypeOperator': type check unimplemented for List.
null_no_such_method_test : Crash # bailout: unsupported element kind: array:field
null_test/01 : Crash # Instance of 'TypeOperator': type check unimplemented for dynamic.
null_test/02 : Crash # Instance of 'TypeOperator': type check unimplemented for dynamic.
null_test/03 : Crash # Instance of 'TypeOperator': type check unimplemented for dynamic.
null_test/none : Crash # Instance of 'TypeOperator': type check unimplemented for dynamic.
number_identifier_test/05 : Crash # Instance of 'TypeOperator': type casts not implemented.
number_identifier_test/08 : Crash # Instance of 'TypeOperator': type casts not implemented.
number_identifier_test/09 : Crash # Instance of 'TypeOperator': type casts not implemented.
number_identifier_test/none : Crash # Instance of 'TypeOperator': type casts not implemented.
on_catch_malformed_type_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
operator4_test : RuntimeError
operator_equals_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
optimize_redundant_array_load_test : Crash # bailout: unsupported element kind: A:field
optimized_constant_array_string_access_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
optimized_string_charat_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
optimized_string_charcodeat_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
overridden_no_such_method_test : RuntimeError
phi_merge_test : Crash # bailout: (switch (value){case 42:break;case 43:break;}): Unhandled node
prefix16_test : Crash # Instance of 'TypeOperator': type check unimplemented for myFunc.
private4_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
private_access_test/01 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
private_access_test/02 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
private_access_test/03 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
private_access_test/04 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
private_access_test/05 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
private_access_test/06 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
private_mixin2_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
range_analysis2_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
redirecting_factory_default_values_test/none : RuntimeError
redirecting_factory_incompatible_signature_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
redirecting_factory_long_test : Crash # Instance of 'TypeOperator': type check unimplemented for X<int>.
ref_before_declaration_test/00 : Crash # bailout: (switch (x){case 0:var x='Does fuzzy logic tickle?';}): Unhandled node
ref_before_declaration_test/01 : Crash # bailout: (switch (x){case 0:var x='Does fuzzy logic tickle?';}): Unhandled node
ref_before_declaration_test/02 : Crash # bailout: (switch (x){case 0:var x='Does fuzzy logic tickle?';}): Unhandled node
ref_before_declaration_test/03 : Crash # bailout: (switch (x){case 0:var x='Does fuzzy logic tickle?';}): Unhandled node
ref_before_declaration_test/04 : Crash # bailout: (switch (x){case 0:var x='Does fuzzy logic tickle?';}): Unhandled node
ref_before_declaration_test/05 : Crash # bailout: (switch (x){case 0:var x='Does fuzzy logic tickle?';}): Unhandled node
ref_before_declaration_test/06 : Crash # bailout: (switch (x){case 0:var x='Does fuzzy logic tickle?';}): Unhandled node
ref_before_declaration_test/07 : Crash # bailout: (switch (x){case 0:var x='Does fuzzy logic tickle?';}): Unhandled node
ref_before_declaration_test/none : Crash # bailout: (switch (x){case 0:var x='Does fuzzy logic tickle?';}): Unhandled node
refine_receiver_null_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
reg_exp_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
regress_11010_test : Crash # bailout: unsupported element kind: caller:field
regress_12561_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
regress_14105_test : Crash # Instance of 'TypeOperator': type check unimplemented for A<int>.
regress_18435_test : Crash # Assertion failure: Unknown variable: variable(main#MISSING_VALUE).
regress_18535_test : Crash # Instance of 'TypeOperator': type check unimplemented for V.
regress_21016_test : Crash # bailout: unsupported element kind: list:field
regress_21795_test : Crash # bailout: (try {foo(t);}finally {if(t==0){try {}catch (err,st){}}}): try/finally
regress_22438_test : Crash # bailout: (main()async{var error="no error";try {try {await new Future.error("error");}on MissingType catch (e){}}catch (e){error=e;}Expect.isTrue(error is TypeError);}): cannot handle async/sync*/async* functions
regress_22443_test : Crash # bailout: (D.loadLibrary()): handleStaticGetterInvoke: foreign: getter(loadLibrary)
regress_22445_test : Crash # bailout: (main()async{var error="no error";try {await foo();}catch (e){error=e;}Expect.equals("Error2",error);}): cannot handle async/sync*/async* functions
regress_22579_test : Crash # bailout: (main()async{var error="no error";try {await foo();}catch (e){error=e;}Expect.equals("error",error);}): cannot handle async/sync*/async* functions
regress_22700_test : Crash # t: Failed assertion: line 2530 pos 12: 'state.thisParameter != null' is not true.
regress_22728_test : Crash # bailout: (main()async{bool fault=false;try {assert(await false);}on AssertionError catch (error){fault=true;}Expect.equals(assertsChecked(),fault);}): cannot handle async/sync*/async* functions
regress_22777_test : Crash # bailout: (test()async{try {testSync();}catch (e){Expect.equals(e,"Error");}Expect.equals(a,0);try {await testAsync();}catch (e){Expect.equals(e,"Error");}Expect.equals(a,0);}): cannot handle async/sync*/async* functions
regress_22822_test : Crash # bailout: (try {for(int i=0;i<10;i++ ){return ()=>i+b;}}finally {b=10;}): try/finally
regress_22936_test/01 : Crash # t: Failed assertion: line 534 pos 14: 'catchClause.exception != null' is not true.
regress_22936_test/none : Crash # t: Failed assertion: line 534 pos 14: 'catchClause.exception != null' is not true.
regress_r24720_test : Crash # Instance of 'TypeOperator': type check unimplemented for A<int>.
reify_typevar_static_test/01 : Crash # t: Failed assertion: line 2530 pos 12: 'state.thisParameter != null' is not true.
return_type_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
side_effect_throw_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
skip_expression_test : Crash # Instance of 'TypeOperator': type check unimplemented for OneArg.
smaller_4_Interface_Types_A11_t02_test : Crash # Instance of 'TypeOperator': type check unimplemented for G<C, C, C>.
smi_type_test : Crash # Instance of 'TypeOperator': type check unimplemented for Comparable<double>.
stack_trace_test : Crash # bailout: (try {int j;i=func2();i=200;}on MyException catch (exception,stacktrace){i=50;print(exception.message_);Expect.isNotNull(stacktrace);print(stacktrace);}finally {i=i+800;}): try/finally
statement_test : Crash # bailout: (try {throw "foo";}catch (e){Expect.equals(true,e=="foo");hitCatch=true;}finally {hitFinally=true;}): try/finally
static_postfix_operator_test : Crash # bailout: (try {if(a++ ==0){inIt=true;}}finally {}): try/finally
string_charcode_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
string_optimizations_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
super_all_named_constructor_test : Crash # Assertion failure: Unknown variable: parameter(#v).
super_bound_closure_test/01 : RuntimeError
super_bound_closure_test/none : RuntimeError
super_call4_test : RuntimeError
super_getter_setter_test : RuntimeError
super_implicit_closure_test : RuntimeError
super_inferrer_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
super_operator_index2_test : RuntimeError
super_operator_index5_test : Crash # bailout: (super[0]=42): visitUnresolvedSuperIndexSet
super_operator_index5_test: RuntimeError # Please triage this failure.
super_operator_index6_test : Crash # bailout: (super[0]+=1): visitUnresolvedSuperGetterCompoundIndexSet
super_operator_index6_test: RuntimeError # Please triage this failure.
super_operator_index7_test : Crash # bailout: (super[0]=42): visitUnresolvedSuperIndexSet
super_operator_index7_test: RuntimeError # Please triage this failure.
super_operator_index8_test : Crash # bailout: (super[f()]=g()): visitUnresolvedSuperIndexSet
super_operator_index8_test: RuntimeError # Please triage this failure.
super_operator_index_test/01 : Crash # bailout: (super[4]+=5): visitUnresolvedSuperGetterCompoundIndexSet
super_operator_index_test/03 : Crash # bailout: (super[4]=42): visitUnresolvedSuperIndexSet
super_operator_index_test/04 : Crash # bailout: (super[4]+=5): visitUnresolvedSuperSetterCompoundIndexSet
super_operator_index_test/05 : Crash # bailout: (super[4]=42): visitUnresolvedSuperIndexSet
super_operator_index_test/06 : Crash # bailout: (super[4]+=5): visitUnresolvedSuperGetterCompoundIndexSet
super_operator_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
switch6_test : Crash # bailout: (switch (a){case 0:{x=0;break;}case 1:x=1;break;}): Unhandled node
switch8_test : Crash # bailout: (switch (new List(1)[0]){case const A():throw 'Test failed';}): Unhandled node
switch_bad_case_test/02 : Crash # bailout: (switch (n){case 1:return "I";case 4:return "IV";}): Unhandled node
switch_bad_case_test/none : Crash # bailout: (switch (n){case 1:return "I";case 4:return "IV";}): Unhandled node
switch_case_static_const_test : Crash # bailout: (switch (p){case S:break;case A.S:break;case 'abc':break;}): Unhandled node
switch_case_test/none : Crash # bailout: (switch (new B()){}): Unhandled node
switch_fallthru_test : Crash # bailout: (switch (n){case 0:result="zero";break;case 1:result="one";case 9:result="nine";}): Unhandled node
switch_label2_test : Crash # bailout: (switch (target){case 0:list.add(0);continue case2;case1:case 1:list.add(1);break;case2:case 2:list.add(2);break;case 3:list.add(3);continue case1;}): Unhandled node
switch_label_test : Crash # bailout: (switch (animal){case "cow":switch (sound){case "moo":x=100;break;case "muh":x=200;break;default:continue NIX_UNDERSTAND;}break;case "dog":if(sound=="woof"){x=300;}else{continue NIX_UNDERSTAND;}break;NIX_UNDERSTAND:case "unicorn":x=400;break;default:x=500;break;}): Unhandled node
switch_scope_test : Crash # bailout: (switch (1){case 1:final v=1;break;case 2:final v=2;Expect.equals(2,v);break;default:final v=3;break;}): Unhandled node
switch_test : Crash # bailout: (switch (input){case true:result=12;break;case false:result=22;}): Unhandled node
switch_try_catch_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
sync_generator1_test/01 : Crash # Instance of 'TypeOperator': type check unimplemented for Iterable.
sync_generator1_test/none : Crash # Instance of 'TypeOperator': type check unimplemented for Iterable.
sync_generator2_test/01 : Crash # bailout: (sync()sync*{yield sync;}): cannot handle async/sync*/async* functions
sync_generator2_test/02 : Crash # bailout: (sync()sync*{yield sync;}): cannot handle async/sync*/async* functions
sync_generator2_test/03 : Crash # bailout: (sync()sync*{yield sync;}): cannot handle async/sync*/async* functions
sync_generator2_test/04 : Crash # bailout: (sync()sync*{yield sync;}): cannot handle async/sync*/async* functions
sync_generator2_test/05 : Crash # bailout: (sync()sync*{yield sync;}): cannot handle async/sync*/async* functions
sync_generator2_test/06 : Crash # bailout: (sync()sync*{yield sync;}): cannot handle async/sync*/async* functions
sync_generator2_test/07 : Crash # bailout: (sync()sync*{yield sync;}): cannot handle async/sync*/async* functions
sync_generator2_test/08 : Crash # bailout: (sync()sync*{yield sync;}): cannot handle async/sync*/async* functions
sync_generator2_test/09 : Crash # bailout: (sync()sync*{yield sync;}): cannot handle async/sync*/async* functions
sync_generator2_test/10 : Crash # bailout: (sync()sync*{yield sync;}): cannot handle async/sync*/async* functions
sync_generator2_test/11 : Crash # bailout: (sync()sync*{yield sync;}): cannot handle async/sync*/async* functions
sync_generator2_test/20 : Crash # bailout: (sync()sync*{yield sync;}): cannot handle async/sync*/async* functions
sync_generator2_test/30 : Crash # bailout: (sync()sync*{yield sync;}): cannot handle async/sync*/async* functions
sync_generator2_test/40 : Crash # bailout: (sync()sync*{yield sync;}): cannot handle async/sync*/async* functions
sync_generator2_test/41 : Crash # bailout: (sync()sync*{yield sync;}): cannot handle async/sync*/async* functions
sync_generator2_test/50 : Crash # bailout: (test02()sync*{yield 12321;}): cannot handle async/sync*/async* functions
sync_generator2_test/51 : Crash # bailout: (sync()sync*{yield sync;}): cannot handle async/sync*/async* functions
sync_generator2_test/52 : Crash # bailout: (sync()sync*{yield sync;}): cannot handle async/sync*/async* functions
sync_generator2_test/none : Crash # bailout: (sync()sync*{yield sync;}): cannot handle async/sync*/async* functions
sync_generator3_test/test1 : Crash # bailout: (f()sync*{try {yield 1;throw "three";}catch (e){yield 2;yield e;}finally {yield 4;}}): cannot handle async/sync*/async* functions
sync_generator3_test/test2 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
syncstar_yield_test/copyParameters : Crash # bailout: (Iterable<int> foo3(int p)sync*{int i=0;i++ ;p++ ;yield p+i;}): cannot handle async/sync*/async* functions
syncstar_yield_test/none : Crash # bailout: (Iterable<int> foo3(int p)sync*{int i=0;i++ ;p++ ;yield p+i;}): cannot handle async/sync*/async* functions
syncstar_yieldstar_test : Crash # bailout: (main()async{Expect.listEquals([1,2,3,null,1,1,2,3,5],foo().take(9).toList());}): cannot handle async/sync*/async* functions
temp_mangling_test : Crash # Instance of 'TypeOperator': type check unimplemented for List.
throw1_test : Crash # bailout: (try {int j;j=func();if(j>0){throw new MyException2("Test for exception being thrown");}}on MyException3 catch (exception){i=100;print(exception.getMessage());}on TestException catch (exception){i=50;print(exception.getMessage());}on MyException2 catch (exception){i=150;print(exception.getMessage());}on MyException catch (exception){i=200;print(exception.getMessage());}finally {i=i+800;}): try/finally
throw2_test : Crash # bailout: (try {int j;j=func();}on MyException3 catch (exception){i=100;print(exception.getMessage());}on MyException2 catch (exception){try {i=func2();i=200;}on TestException catch (exception){i=50;}print(exception.getMessage());}on MyException catch (exception){i=func2();print(exception.getMessage());}finally {i=i+800;}): try/finally
throw3_test : Crash # bailout: (try {int j;i=100;i=func();i=200;}on MyException catch (exception){i=50;print(exception.message_);}finally {i=i+800;}): try/finally
throw4_test : Crash # bailout: (try {j=func();}on MyException3 catch (exception){i=i+300;print(exception.message_);}on MyException2 catch (exception){i=i+200;print(exception.message_);}on MyException1 catch (exception){i=i+100;print(exception.message_);}finally {i=i+1000;}): try/finally
throw5_test : Crash # bailout: (try {int j;j=func();}on MyException3 catch (exception){i=300;print(exception.message_);}on MyException2 catch (exception){i=200;print(exception.message_);}on MyException1 catch (exception){i=100;print(exception.message_);}finally {i=i+800;}): try/finally
throw6_test : Crash # bailout: (try {j=func();}catch (exception){i=i+100;print(exception.message_);}finally {i=i+1000;}): try/finally
throw8_test : Crash # bailout: (try {try {return 499;}catch (e,st){rethrow;}}finally {finallyExecutionCount++ ;throw "quit finally with throw";}): try/finally
throw_expr_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
throw_test : Crash # bailout: (try {int j;j=func();if(j>0){throw new MyException("Test for exception being thrown");}}on MyException catch (exception){i=100;print(exception.message_);}finally {i=i+800;}): try/finally
throwing_lazy_variable_test : Crash # bailout: unsupported element kind: a:field
truncdiv_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
truncdiv_uint32_test : Crash # bailout: unsupported element kind: a:field
try_catch3_test : Crash # bailout: (try {int j;j=f2();j=f3();try {int k=f2();f3();}on MyException catch (ex){int i=10;print(i);}on TestException catch (ex){int k=10;print(k);}try {j=j+24;}catch (e){i=300;print(e.getMessage());}try {j+= 20;}catch (e){i=400;print(e.getMessage());}try {j+= 40;}catch (e){i=600;print(e.getMessage());}try {j+= 60;}catch (e,trace){i=700;print(trace.toString());print(e.getMessage());}try {j+= 80;}on MyException catch (e){i=500;print(e.getMessage());}}on MyParameterizedException<String,TestException> catch (e,trace){i=800;print(trace.toString());rethrow;}on MyException catch (exception){i=100;print(exception.getMessage());}on TestException catch (e,trace){i=200;print(trace.toString());}finally {i=900;}): try/finally
try_catch4_test : Crash # bailout: (try {doThrow();}catch (e){a=8;entered=true;continue;}finally {b=8==a;entered=true;continue;}): try/finally
try_catch5_test : Crash # bailout: (try {try {a=8;return;}finally {b=8==a;entered=true;continue;}}finally {continue;}): try/finally
try_catch_on_syntax_test/07 : Crash # Instance of 'TypeOperator': type check unimplemented for UndefinedClass.
try_catch_optimized1_test : RuntimeError
try_catch_optimized2_test : Crash # bailout: (try {bar();}finally {}): try/finally
try_catch_optimized3_test : RuntimeError
try_catch_optimized4_test : Crash # bailout: unsupported element kind: a:field
try_catch_osr_test : Crash # bailout: (try {if(x==null)throw 42;return 99;}finally {}): try/finally
try_catch_syntax_test/08 : Crash # Instance of 'TypeOperator': type check unimplemented for MammaMia.
try_catch_test/01 : Crash # t: Failed assertion: line 534 pos 14: 'catchClause.exception != null' is not true.
try_catch_test/none : Crash # t: Failed assertion: line 534 pos 14: 'catchClause.exception != null' is not true.
type_argument_in_super_type_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
type_argument_substitution_test : Crash # Instance of 'TypeOperator': type check unimplemented for X<A<String>>.
type_check_test : Crash # Instance of 'TypeOperator': type casts not implemented.
type_conversion_ssa_test : Crash # bailout: unsupported element kind: array:field
type_error_test : Crash # Instance of 'TypeOperator': type casts not implemented.
type_guard_conversion_test : Crash # Instance of 'TypeOperator': type check unimplemented for Comparable.
type_literal_prefix_call_test/00 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
type_parameter_test/01 : Crash # Instance of 'TypeOperator': type check unimplemented for Set.
type_parameter_test/02 : Crash # Instance of 'TypeOperator': type check unimplemented for Set.
type_parameter_test/03 : Crash # Instance of 'TypeOperator': type check unimplemented for Set.
type_parameter_test/04 : Crash # Instance of 'TypeOperator': type check unimplemented for Set.
type_parameter_test/05 : Crash # Instance of 'TypeOperator': type check unimplemented for Set.
type_parameter_test/06 : Crash # Instance of 'TypeOperator': type check unimplemented for Set.
type_parameter_test/none : Crash # Instance of 'TypeOperator': type check unimplemented for Set.
type_promotion_closure_test/01 : Crash # Instance of 'TypeOperator': type check unimplemented for List<B>.
type_promotion_closure_test/02 : Crash # Instance of 'TypeOperator': type check unimplemented for List<B>.
type_promotion_closure_test/03 : Crash # Instance of 'TypeOperator': type check unimplemented for List<B>.
type_promotion_closure_test/04 : Crash # Instance of 'TypeOperator': type check unimplemented for List<B>.
type_promotion_closure_test/05 : Crash # Instance of 'TypeOperator': type check unimplemented for List<B>.
type_promotion_closure_test/06 : Crash # Instance of 'TypeOperator': type check unimplemented for List<B>.
type_promotion_closure_test/07 : Crash # Instance of 'TypeOperator': type check unimplemented for List<B>.
type_promotion_closure_test/08 : Crash # Instance of 'TypeOperator': type check unimplemented for List<B>.
type_promotion_closure_test/09 : Crash # Instance of 'TypeOperator': type check unimplemented for List<B>.
type_promotion_closure_test/10 : Crash # Instance of 'TypeOperator': type check unimplemented for List<B>.
type_promotion_closure_test/11 : Crash # Instance of 'TypeOperator': type check unimplemented for List<B>.
type_promotion_closure_test/12 : Crash # Instance of 'TypeOperator': type check unimplemented for List<B>.
type_promotion_closure_test/13 : Crash # Instance of 'TypeOperator': type check unimplemented for List<B>.
type_promotion_closure_test/14 : Crash # Instance of 'TypeOperator': type check unimplemented for List<B>.
type_promotion_closure_test/15 : Crash # Instance of 'TypeOperator': type check unimplemented for List<B>.
type_promotion_closure_test/16 : Crash # Instance of 'TypeOperator': type check unimplemented for List<B>.
type_promotion_closure_test/none : Crash # Instance of 'TypeOperator': type check unimplemented for List<B>.
type_promotion_functions_test/01 : Crash # Instance of 'TypeOperator': type check unimplemented for FuncDynToDyn.
type_promotion_functions_test/02 : Crash # Instance of 'TypeOperator': type check unimplemented for FuncDynToDyn.
type_promotion_functions_test/03 : Crash # Instance of 'TypeOperator': type check unimplemented for FuncDynToDyn.
type_promotion_functions_test/04 : Crash # Instance of 'TypeOperator': type check unimplemented for FuncDynToDyn.
type_promotion_functions_test/05 : Crash # Instance of 'TypeOperator': type check unimplemented for FuncDynToDyn.
type_promotion_functions_test/06 : Crash # Instance of 'TypeOperator': type check unimplemented for FuncDynToDyn.
type_promotion_functions_test/07 : Crash # Instance of 'TypeOperator': type check unimplemented for FuncDynToDyn.
type_promotion_functions_test/08 : Crash # Instance of 'TypeOperator': type check unimplemented for FuncDynToDyn.
type_promotion_functions_test/09 : Crash # Instance of 'TypeOperator': type check unimplemented for FuncDynToDyn.
type_promotion_functions_test/10 : Crash # Instance of 'TypeOperator': type check unimplemented for FuncDynToDyn.
type_promotion_functions_test/11 : Crash # Instance of 'TypeOperator': type check unimplemented for FuncDynToDyn.
type_promotion_functions_test/12 : Crash # Instance of 'TypeOperator': type check unimplemented for FuncDynToDyn.
type_promotion_functions_test/13 : Crash # Instance of 'TypeOperator': type check unimplemented for FuncDynToDyn.
type_promotion_functions_test/14 : Crash # Instance of 'TypeOperator': type check unimplemented for FuncDynToDyn.
type_promotion_functions_test/none : Crash # Instance of 'TypeOperator': type check unimplemented for FuncDynToDyn.
type_promotion_more_specific_test/01 : Crash # Instance of 'TypeOperator': type check unimplemented for E.
type_promotion_more_specific_test/02 : Crash # Instance of 'TypeOperator': type check unimplemented for E.
type_promotion_more_specific_test/03 : Crash # Instance of 'TypeOperator': type check unimplemented for E.
type_promotion_more_specific_test/04 : Crash # Instance of 'TypeOperator': type check unimplemented for E.
type_promotion_more_specific_test/05 : Crash # Instance of 'TypeOperator': type check unimplemented for E.
type_promotion_more_specific_test/06 : Crash # Instance of 'TypeOperator': type check unimplemented for E.
type_promotion_more_specific_test/07 : Crash # Instance of 'TypeOperator': type check unimplemented for E.
type_promotion_more_specific_test/08 : Crash # Instance of 'TypeOperator': type check unimplemented for E.
type_promotion_more_specific_test/09 : Crash # Instance of 'TypeOperator': type check unimplemented for E.
type_promotion_more_specific_test/10 : Crash # Instance of 'TypeOperator': type check unimplemented for E.
type_promotion_more_specific_test/11 : Crash # Instance of 'TypeOperator': type check unimplemented for E.
type_promotion_more_specific_test/12 : Crash # Instance of 'TypeOperator': type check unimplemented for E.
type_promotion_more_specific_test/13 : Crash # Instance of 'TypeOperator': type check unimplemented for E.
type_promotion_more_specific_test/none : Crash # Instance of 'TypeOperator': type check unimplemented for E.
type_propagation_in_for_update_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
type_variable_bounds2_test/00 : Crash # Instance of 'TypeOperator': type check unimplemented for I.
type_variable_bounds2_test/01 : Crash # Instance of 'TypeOperator': type check unimplemented for I.
type_variable_bounds2_test/02 : Crash # Instance of 'TypeOperator': type check unimplemented for I.
type_variable_bounds2_test/03 : Crash # Instance of 'TypeOperator': type check unimplemented for I.
type_variable_bounds2_test/04 : Crash # Instance of 'TypeOperator': type check unimplemented for J.
type_variable_bounds2_test/05 : Crash # Instance of 'TypeOperator': type check unimplemented for K.
type_variable_bounds2_test/06 : Crash # Instance of 'TypeOperator': type check unimplemented for I.
type_variable_bounds2_test/none : Crash # Instance of 'TypeOperator': type check unimplemented for I.
type_variable_bounds3_test/00 : Crash # Instance of 'TypeOperator': type check unimplemented for A<X>.
type_variable_closure2_test : Crash # Instance of 'TypeOperator': type check unimplemented for A<int>.
type_variable_closure_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
type_variable_conflict2_test/03 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
type_variable_conflict2_test/04 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
type_variable_conflict2_test/05 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
type_variable_conflict2_test/07 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
type_variable_conflict2_test/09 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
type_variable_field_initializer_closure_test : Crash # Instance of 'TypeOperator': type check unimplemented for List<int>.
type_variable_field_initializer_test : Crash # Instance of 'TypeOperator': type check unimplemented for List<int>.
type_variable_function_type_test : Crash # Instance of 'TypeOperator': type check unimplemented for Func<S>.
type_variable_initializer_test : Crash # Instance of 'TypeOperator': type check unimplemented for Map<int, int>.
type_variable_nested_test : Crash # Instance of 'TypeOperator': type check unimplemented for List<int>.
type_variable_scope2_test : Crash # Instance of 'TypeOperator': type check unimplemented for Foo.
type_variable_typedef_test : Crash # unimplemented translation of type expression Foo<T>
typed_equality_test : Crash # Instance of 'TypeOperator': type casts not implemented.
typedef_is_test : Crash # Instance of 'TypeOperator': type check unimplemented for Func1.
typevariable_substitution2_test/01 : Crash # Internal Error: No default constructor available.
typevariable_substitution2_test/02 : Crash # Internal Error: No default constructor available.
typevariable_substitution2_test/none : Crash # Internal Error: No default constructor available.
unresolved_default_constructor_test/01 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
unresolved_top_level_method_negative_test : Crash # bailout: unsupported element kind: a:field
unresolved_top_level_var_negative_test : Crash # bailout: unsupported element kind: a:field
value_range2_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
value_range3_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
value_range_test : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
void_type_test : Crash # bailout: (switch (n){case 0:x=f();break;case 1:x=f_null();break;case 2:x=f_1();break;case 3:x=f_dyn_null();break;case 4:x=f_dyn_1();break;case 5:x=f_f();break;}): Unhandled node
super_operator_index_test/01 : Crash # bailout: (super[4]+=5): visitUnresolvedSuperGetterCompoundIndexSet
super_operator_index_test/03 : Crash # bailout: (super[4]=42): visitUnresolvedSuperIndexSet
super_operator_index_test/06 : Crash # bailout: (super[4]+=5): visitUnresolvedSuperGetterCompoundIndexSet
super_operator_index_test/05 : Crash # bailout: (super[4]=42): visitUnresolvedSuperIndexSet
super_operator_index_test/04 : Crash # bailout: (super[4]+=5): visitUnresolvedSuperSetterCompoundIndexSet
call_nonexistent_static_test/01 : Crash # Instance of 'TypeOperator': type check unimplemented for _Nullary.
